{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexm\\\\VsCodeProjects\\\\School Projects\\\\CEN\\\\SWE semester project\\\\SWE-OnTask\\\\frontend\\\\src\\\\components\\\\ClassroomForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useClassContext } from \"../hooks/useClassContext\";\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ClassroomForm = () => {\n  _s();\n\n  const {\n    dispatch\n  } = useClassContext();\n  const {\n    user\n  } = useAuthContext();\n  const [email, setEmail] = useState(user.email);\n  const [code, setCode] = useState('');\n  const [classroomName, setClassroomName] = useState('');\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!user) {\n      setError('You must be logged in');\n      return;\n    }\n\n    if (!classroomName || !code || !email) {\n      setError('Please fill in all fields');\n      return;\n    }\n\n    try {\n      const response = await fetch('/api/classes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${user.token}`\n        },\n        body: JSON.stringify({\n          classroomName,\n          code,\n          email\n        })\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json(); // Check for MongoDB duplicate key error\n\n        if (errorData.code === 11000) {\n          if (errorData.keyPattern && errorData.keyPattern.code) {\n            setError('Code already in use. Please select a different code.');\n          } else if (errorData.keyPattern && errorData.keyPattern.email) {\n            setError('A class already exists for this email.');\n          } else {\n            setError('Duplicate key error. Please try again.');\n          }\n        } else {\n          setError('Failed to create class. Please try again.');\n        }\n\n        console.error('Error creating class:', errorData.errmsg);\n        return;\n      }\n\n      const classData = await response.json();\n      dispatch({\n        type: 'CREATE_CLASS',\n        payload: classData\n      });\n      const responseTwo = await fetch('/api/user', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${user.token}`\n        },\n        body: JSON.stringify({\n          email: user.email,\n          newCode: code\n        })\n      });\n\n      if (!responseTwo.ok) {\n        const errorTextTwo = await responseTwo.text();\n        console.error('Error updating user code:', errorTextTwo);\n        setError('Failed to update user code.');\n        return;\n      }\n\n      const updatedUser = await responseTwo.json(); // Update the user context\n\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: updatedUser\n      });\n      setIsModalOpen(false);\n    } catch (err) {\n      console.error('Fetch error:', err);\n      setError('An unexpected error occurred.');\n    }\n  };\n\n  const openModal = () => setIsModalOpen(true);\n\n  const closeModal = () => setIsModalOpen(false);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      className: \"create-class-button\",\n      children: \"Create Class\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"create-class\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create a New Class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Class Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setClassroomName(e.target.value),\n            value: classroomName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Class Code:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setCode(e.target.value),\n            value: code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            value: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit\",\n            disabled: !classroomName || !code || !email,\n            children: \"Create Class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: closeModal,\n            className: \"close-modal\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ClassroomForm, \"QE7ZLFd9RfCz+Zfycuqpgy0hXcU=\", false, function () {\n  return [useClassContext, useAuthContext];\n});\n\n_c = ClassroomForm;\nexport default ClassroomForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClassroomForm\");","map":{"version":3,"names":["useState","useClassContext","useAuthContext","ClassroomForm","dispatch","user","email","setEmail","code","setCode","classroomName","setClassroomName","error","setError","isModalOpen","setIsModalOpen","handleSubmit","e","preventDefault","response","fetch","method","headers","token","body","JSON","stringify","ok","errorData","json","keyPattern","console","errmsg","classData","type","payload","responseTwo","newCode","errorTextTwo","text","updatedUser","err","openModal","closeModal","target","value"],"sources":["C:/Users/alexm/VsCodeProjects/School Projects/CEN/SWE semester project/SWE-OnTask/frontend/src/components/ClassroomForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useClassContext } from \"../hooks/useClassContext\";\r\nimport { useAuthContext } from '../hooks/useAuthContext';\r\n\r\nconst ClassroomForm = () => {\r\n  const { dispatch } = useClassContext();\r\n  const { user } = useAuthContext();\r\n\r\n  const [email, setEmail] = useState(user.email);\r\n  const [code, setCode] = useState('');\r\n  const [classroomName, setClassroomName] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    if (!user) {\r\n      setError('You must be logged in');\r\n      return;\r\n    }\r\n  \r\n    if (!classroomName || !code || !email) {\r\n      setError('Please fill in all fields');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch('/api/classes', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${user.token}`,\r\n        },\r\n        body: JSON.stringify({ classroomName, code, email }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n  \r\n        // Check for MongoDB duplicate key error\r\n        if (errorData.code === 11000) {\r\n          if (errorData.keyPattern && errorData.keyPattern.code) {\r\n            setError('Code already in use. Please select a different code.');\r\n          } else if (errorData.keyPattern && errorData.keyPattern.email) {\r\n            setError('A class already exists for this email.');\r\n          } else {\r\n            setError('Duplicate key error. Please try again.');\r\n          }\r\n        } else {\r\n          setError('Failed to create class. Please try again.');\r\n        }\r\n  \r\n        console.error('Error creating class:', errorData.errmsg);\r\n        return;\r\n      }\r\n  \r\n      const classData = await response.json();\r\n      dispatch({ type: 'CREATE_CLASS', payload: classData });\r\n  \r\n      const responseTwo = await fetch('/api/user', {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${user.token}`,\r\n        },\r\n        body: JSON.stringify({ email: user.email, newCode: code }),\r\n      });\r\n  \r\n      if (!responseTwo.ok) {\r\n        const errorTextTwo = await responseTwo.text();\r\n        console.error('Error updating user code:', errorTextTwo);\r\n        setError('Failed to update user code.');\r\n        return;\r\n      }\r\n  \r\n      const updatedUser = await responseTwo.json();\r\n  \r\n      // Update the user context\r\n      dispatch({ type: 'UPDATE_USER', payload: updatedUser });\r\n  \r\n      setIsModalOpen(false);\r\n    } catch (err) {\r\n      console.error('Fetch error:', err);\r\n      setError('An unexpected error occurred.');\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n  \r\n  const openModal = () => setIsModalOpen(true);\r\n  const closeModal = () => setIsModalOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <button onClick={openModal} className=\"create-class-button\">Create Class</button>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <form className=\"create-class\" onSubmit={handleSubmit}>\r\n              <h3>Create a New Class</h3>\r\n\r\n              <label>Class Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setClassroomName(e.target.value)}\r\n                value={classroomName}\r\n              />\r\n\r\n              <label>Class Code:</label>\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setCode(e.target.value)}\r\n                value={code}\r\n              />\r\n\r\n              <input\r\n                type=\"hidden\"\r\n                value={email}\r\n              />\r\n\r\n              <button type=\"submit\" className=\"submit\" disabled={!classroomName || !code || !email}>\r\n                Create Class\r\n              </button>\r\n              {error && <div className=\"error\">{error}</div>}\r\n\r\n              <button type=\"button\" onClick={closeModal} className=\"close-modal\">\r\n                Close\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClassroomForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}