{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexm\\\\VsCodeProjects\\\\School Projects\\\\CEN\\\\SWE semester project\\\\SWE-OnTask\\\\frontend\\\\src\\\\components\\\\Calendar.js\";\nimport React from 'react';\nimport { DayPilotCalendar } from \"@daypilot/daypilot-lite-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calendar = _ref => {\n  let {\n    startDate,\n    events\n  } = _ref;\n  // Format events for DayPilot Calendar\n  const formattedEvents = events.map(event => ({\n    id: event.id,\n    text: event.text,\n    start: new Date(event.start).toISOString(),\n    // Ensure it's in ISO format\n    end: new Date(event.end).toISOString(),\n    // Ensure it's in ISO format\n    backColor: event.backColor || \"#ffffff\",\n    // Use provided backColor or fallback\n    participants: event.participants || 0 // Use provided participants or fallback\n\n  }));\n  const config = {\n    viewType: \"Week\",\n    durationBarVisible: false,\n    startDate: startDate,\n    events: formattedEvents // Use formatted events here\n    // Other configurations...\n\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DayPilotCalendar, { ...config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","DayPilotCalendar","Calendar","startDate","events","formattedEvents","map","event","id","text","start","Date","toISOString","end","backColor","participants","config","viewType","durationBarVisible"],"sources":["C:/Users/alexm/VsCodeProjects/School Projects/CEN/SWE semester project/SWE-OnTask/frontend/src/components/Calendar.js"],"sourcesContent":["import React from 'react';\r\nimport { DayPilotCalendar } from \"@daypilot/daypilot-lite-react\";\r\n\r\nconst Calendar = ({ startDate, events }) => {\r\n  // Format events for DayPilot Calendar\r\n  const formattedEvents = events.map(event => ({\r\n    id: event.id,\r\n    text: event.text,\r\n    start: new Date(event.start).toISOString(), // Ensure it's in ISO format\r\n    end: new Date(event.end).toISOString(),     // Ensure it's in ISO format\r\n    backColor: event.backColor || \"#ffffff\",    // Use provided backColor or fallback\r\n    participants: event.participants || 0,       // Use provided participants or fallback\r\n  }));\r\n\r\n  const config = {\r\n    viewType: \"Week\",\r\n    durationBarVisible: false,\r\n    startDate: startDate,\r\n    events: formattedEvents, // Use formatted events here\r\n    // Other configurations...\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DayPilotCalendar {...config} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;;;AAEA,MAAMC,QAAQ,GAAG,QAA2B;EAAA,IAA1B;IAAEC,SAAF;IAAaC;EAAb,CAA0B;EAC1C;EACA,MAAMC,eAAe,GAAGD,MAAM,CAACE,GAAP,CAAWC,KAAK,KAAK;IAC3CC,EAAE,EAAED,KAAK,CAACC,EADiC;IAE3CC,IAAI,EAAEF,KAAK,CAACE,IAF+B;IAG3CC,KAAK,EAAE,IAAIC,IAAJ,CAASJ,KAAK,CAACG,KAAf,EAAsBE,WAAtB,EAHoC;IAGC;IAC5CC,GAAG,EAAE,IAAIF,IAAJ,CAASJ,KAAK,CAACM,GAAf,EAAoBD,WAApB,EAJsC;IAIC;IAC5CE,SAAS,EAAEP,KAAK,CAACO,SAAN,IAAmB,SALa;IAKC;IAC5CC,YAAY,EAAER,KAAK,CAACQ,YAAN,IAAsB,CANO,CAME;;EANF,CAAL,CAAhB,CAAxB;EASA,MAAMC,MAAM,GAAG;IACbC,QAAQ,EAAE,MADG;IAEbC,kBAAkB,EAAE,KAFP;IAGbf,SAAS,EAAEA,SAHE;IAIbC,MAAM,EAAEC,eAJK,CAIY;IACzB;;EALa,CAAf;EAQA,oBACE;IAAA,uBACE,QAAC,gBAAD,OAAsBW;IAAtB;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAxBD;;KAAMd,Q;AA0BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}