{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexm\\\\VsCodeProjects\\\\School Projects\\\\CEN\\\\SWE semester project\\\\SWE-OnTask\\\\frontend\\\\src\\\\pages\\\\Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Account = () => {\n  _s();\n\n  const {\n    user\n  } = useAuthContext();\n  const [classroomData, setClassroomData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [teacherCode, setTeacherCode] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(\"\"); // Fetch classroom data based on the user's classroom code\n\n  useEffect(() => {\n    if (user && user.classroomCode) {\n      const fetchClassroom = async () => {\n        try {\n          const response = await fetch(`/api/classes/by-code?code=${user.classroomCode}`, {\n            method: \"GET\",\n            headers: {\n              Authorization: `Bearer ${user.token}` // Use the token from the user context\n\n            }\n          });\n          const data = await response.json();\n\n          if (response.ok) {\n            setClassroomData(data); // Store classroom data if request is successful\n          } else {\n            console.log(\"Invalid classroom code\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching classroom:\", error);\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchClassroom();\n    } else {\n      setLoading(false); // No classroomCode, so we stop loading\n    }\n  }, [user]); // Handle the teacher code input submission\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    setSuccess(\"\");\n\n    try {\n      const response = await fetch(`/api/classes/validate-code?code=${teacherCode}`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        // If valid, patch the student's user object to include the classroom code\n        const patchResponse = await fetch(`/api/user/update-classroom`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`\n          },\n          body: JSON.stringify({\n            classroomCode: teacherCode\n          })\n        });\n\n        if (patchResponse.ok) {\n          setClassroomData(data); // Update classroom data\n\n          setSuccess(\"Classroom successfully added!\");\n        } else {\n          const patchError = await patchResponse.json();\n          setError(patchError.error || \"Failed to update classroom.\");\n        }\n      } else {\n        setError(\"Invalid teacher code. Please try again.\");\n      }\n    } catch (err) {\n      console.error(\"Error validating code:\", err);\n      setError(\"An error occurred. Please try again.\");\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please log in to view your account details.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Account Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Account Type: \", user.role]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), user.role === \"student\" && !classroomData && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter Teacher's Code:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: teacherCode,\n          onChange: e => setTeacherCode(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }, this), classroomData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Class Name: \", classroomData.classroomName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Class Code: \", classroomData.code]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Teacher's Email: \", classroomData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), !classroomData && user.role === \"student\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No classroom associated yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 53\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Account, \"+DpDf4NTjqIO7imHPd7QoqjMUug=\", false, function () {\n  return [useAuthContext];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useEffect","useState","useAuthContext","Account","user","classroomData","setClassroomData","loading","setLoading","teacherCode","setTeacherCode","error","setError","success","setSuccess","classroomCode","fetchClassroom","response","fetch","method","headers","Authorization","token","data","json","ok","console","log","handleSubmit","e","preventDefault","patchResponse","body","JSON","stringify","patchError","err","role","name","email","target","value","color","classroomName","code"],"sources":["C:/Users/alexm/VsCodeProjects/School Projects/CEN/SWE semester project/SWE-OnTask/frontend/src/pages/Account.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useAuthContext } from \"../hooks/useAuthContext\";\r\n\r\nconst Account = () => {\r\n  const { user } = useAuthContext();\r\n  const [classroomData, setClassroomData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [teacherCode, setTeacherCode] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  // Fetch classroom data based on the user's classroom code\r\n  useEffect(() => {\r\n    if (user && user.classroomCode) {\r\n      const fetchClassroom = async () => {\r\n        try {\r\n          const response = await fetch(`/api/classes/by-code?code=${user.classroomCode}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: `Bearer ${user.token}`, // Use the token from the user context\r\n            },\r\n          });\r\n\r\n          const data = await response.json();\r\n          if (response.ok) {\r\n            setClassroomData(data); // Store classroom data if request is successful\r\n          } else {\r\n            console.log(\"Invalid classroom code\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching classroom:\", error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      fetchClassroom();\r\n    } else {\r\n      setLoading(false); // No classroomCode, so we stop loading\r\n    }\r\n  }, [user]);\r\n\r\n  // Handle the teacher code input submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setSuccess(\"\");\r\n\r\n    try {\r\n      const response = await fetch(`/api/classes/validate-code?code=${teacherCode}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        // If valid, patch the student's user object to include the classroom code\r\n        const patchResponse = await fetch(`/api/user/update-classroom`, {\r\n          method: \"PATCH\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n          body: JSON.stringify({ classroomCode: teacherCode }),\r\n        });\r\n\r\n        if (patchResponse.ok) {\r\n          setClassroomData(data); // Update classroom data\r\n          setSuccess(\"Classroom successfully added!\");\r\n        } else {\r\n          const patchError = await patchResponse.json();\r\n          setError(patchError.error || \"Failed to update classroom.\");\r\n        }\r\n      } else {\r\n        setError(\"Invalid teacher code. Please try again.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error validating code:\", err);\r\n      setError(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!user) {\r\n    return <div>Please log in to view your account details.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"account\">\r\n      <h1>Account Info</h1>\r\n      <p>Account Type: {user.role}</p>\r\n      <p>Name: {user.name}</p>\r\n      <p>Email: {user.email}</p>\r\n      {user.role === \"student\" && !classroomData && (\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            Enter Teacher's Code:\r\n            <input\r\n              type=\"text\"\r\n              value={teacherCode}\r\n              onChange={(e) => setTeacherCode(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      )}\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {success && <p style={{ color: \"green\" }}>{success}</p>}\r\n      {classroomData && (\r\n        <>\r\n          <p>Class Name: {classroomData.classroomName}</p>\r\n          <p>Class Code: {classroomData.code}</p>\r\n          <p>Teacher's Email: {classroomData.email}</p>\r\n        </>\r\n      )}\r\n      {!classroomData && user.role === \"student\" && <p>No classroom associated yet.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,yBAA/B;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAM;IAAEC;EAAF,IAAWF,cAAc,EAA/B;EACA,MAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,IAAD,CAAlD;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC,CANoB,CAQpB;;EACAD,SAAS,CAAC,MAAM;IACd,IAAII,IAAI,IAAIA,IAAI,CAACW,aAAjB,EAAgC;MAC9B,MAAMC,cAAc,GAAG,YAAY;QACjC,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAA4Bd,IAAI,CAACW,aAAc,EAAjD,EAAoD;YAC9EI,MAAM,EAAE,KADsE;YAE9EC,OAAO,EAAE;cACPC,aAAa,EAAG,UAASjB,IAAI,CAACkB,KAAM,EAD7B,CACgC;;YADhC;UAFqE,CAApD,CAA5B;UAOA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;;UACA,IAAIP,QAAQ,CAACQ,EAAb,EAAiB;YACfnB,gBAAgB,CAACiB,IAAD,CAAhB,CADe,CACS;UACzB,CAFD,MAEO;YACLG,OAAO,CAACC,GAAR,CAAY,wBAAZ;UACD;QACF,CAdD,CAcE,OAAOhB,KAAP,EAAc;UACde,OAAO,CAACf,KAAR,CAAc,2BAAd,EAA2CA,KAA3C;QACD,CAhBD,SAgBU;UACRH,UAAU,CAAC,KAAD,CAAV;QACD;MACF,CApBD;;MAsBAQ,cAAc;IACf,CAxBD,MAwBO;MACLR,UAAU,CAAC,KAAD,CAAV,CADK,CACc;IACpB;EACF,CA5BQ,EA4BN,CAACJ,IAAD,CA5BM,CAAT,CAToB,CAuCpB;;EACA,MAAMwB,YAAY,GAAG,MAAOC,CAAP,IAAa;IAChCA,CAAC,CAACC,cAAF;IACAlB,QAAQ,CAAC,IAAD,CAAR;IACAE,UAAU,CAAC,EAAD,CAAV;;IAEA,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,mCAAkCT,WAAY,EAAhD,EAAmD;QAC7EU,MAAM,EAAE,KADqE;QAE7EC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASjB,IAAI,CAACkB,KAAM;QAD7B;MAFoE,CAAnD,CAA5B;MAOA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;;MACA,IAAIP,QAAQ,CAACQ,EAAb,EAAiB;QACf;QACA,MAAMM,aAAa,GAAG,MAAMb,KAAK,CAAE,4BAAF,EAA+B;UAC9DC,MAAM,EAAE,OADsD;UAE9DC,OAAO,EAAE;YACP,gBAAgB,kBADT;YAEPC,aAAa,EAAG,UAASjB,IAAI,CAACkB,KAAM;UAF7B,CAFqD;UAM9DU,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;YAAEnB,aAAa,EAAEN;UAAjB,CAAf;QANwD,CAA/B,CAAjC;;QASA,IAAIsB,aAAa,CAACN,EAAlB,EAAsB;UACpBnB,gBAAgB,CAACiB,IAAD,CAAhB,CADoB,CACI;;UACxBT,UAAU,CAAC,+BAAD,CAAV;QACD,CAHD,MAGO;UACL,MAAMqB,UAAU,GAAG,MAAMJ,aAAa,CAACP,IAAd,EAAzB;UACAZ,QAAQ,CAACuB,UAAU,CAACxB,KAAX,IAAoB,6BAArB,CAAR;QACD;MACF,CAlBD,MAkBO;QACLC,QAAQ,CAAC,yCAAD,CAAR;MACD;IACF,CA9BD,CA8BE,OAAOwB,GAAP,EAAY;MACZV,OAAO,CAACf,KAAR,CAAc,wBAAd,EAAwCyB,GAAxC;MACAxB,QAAQ,CAAC,sCAAD,CAAR;IACD;EACF,CAvCD;;EAyCA,IAAIL,OAAJ,EAAa;IACX,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,IAAI,CAACH,IAAL,EAAW;IACT,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,6BAAkBA,IAAI,CAACiC,IAAvB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,qBAAUjC,IAAI,CAACkC,IAAf;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA,sBAAWlC,IAAI,CAACmC,KAAhB;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,EAKGnC,IAAI,CAACiC,IAAL,KAAc,SAAd,IAA2B,CAAChC,aAA5B,iBACC;MAAM,QAAQ,EAAEuB,YAAhB;MAAA,wBACE;QAAA,iDAEE;UACE,IAAI,EAAC,MADP;UAEE,KAAK,EAAEnB,WAFT;UAGE,QAAQ,EAAGoB,CAAD,IAAOnB,cAAc,CAACmB,CAAC,CAACW,MAAF,CAASC,KAAV,CAHjC;UAIE,QAAQ;QAJV;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ,EAmBG9B,KAAK,iBAAI;MAAG,KAAK,EAAE;QAAE+B,KAAK,EAAE;MAAT,CAAV;MAAA,UAA6B/B;IAA7B;MAAA;MAAA;MAAA;IAAA,QAnBZ,EAoBGE,OAAO,iBAAI;MAAG,KAAK,EAAE;QAAE6B,KAAK,EAAE;MAAT,CAAV;MAAA,UAA+B7B;IAA/B;MAAA;MAAA;MAAA;IAAA,QApBd,EAqBGR,aAAa,iBACZ;MAAA,wBACE;QAAA,2BAAgBA,aAAa,CAACsC,aAA9B;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,2BAAgBtC,aAAa,CAACuC,IAA9B;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA,gCAAqBvC,aAAa,CAACkC,KAAnC;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA,gBAtBJ,EA4BG,CAAClC,aAAD,IAAkBD,IAAI,CAACiC,IAAL,KAAc,SAAhC,iBAA6C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA5BhD;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD,CAzHD;;GAAMlC,O;UACaD,c;;;KADbC,O;AA2HN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}