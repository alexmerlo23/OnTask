{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexm\\\\VsCodeProjects\\\\School Projects\\\\CEN\\\\SWE semester project\\\\SWE-OnTask\\\\frontend\\\\src\\\\components\\\\Calendar.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { DayPilotCalendar } from \"@daypilot/daypilot-lite-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calendar = _ref => {\n  _s();\n\n  let {\n    startDate,\n    events,\n    onDeleteEvent,\n    onEditEvent\n  } = _ref;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n\n  const openModal = event => {\n    setSelectedEvent(event); // Store the selected event\n\n    setIsModalOpen(true); // Open the modal\n  };\n\n  const closeModal = () => setIsModalOpen(false); // Close the modal\n\n\n  const formattedEvents = events.map(event => ({\n    id: event.id,\n    text: event.text,\n    start: new Date(event.start).toISOString(),\n    end: new Date(event.end).toISOString(),\n    backColor: event.backColor,\n    participants: event.participants || 0,\n    type: event.type\n  }));\n  const config = {\n    viewType: \"Week\",\n    durationBarVisible: false,\n    startDate: startDate,\n    events: formattedEvents,\n    onBeforeEventRender: args => {\n      args.data.backColor = args.data.backColor || \"#ffffff\"; // Fallback to white if no color\n\n      args.data.html = `\n        <div style=\"display: flex; flex-direction: column; justify-content: space-between; height: 100%;\">\n          <div>${args.data.text}</div>\n          <div style=\"display: flex; justify-content: center; gap: 10px; margin-top: 5px;\">\n            ${onEditEvent ? '<span class=\"edit-icon\" style=\"cursor: pointer;\">‚úèÔ∏è</span>' : ''}\n            ${onDeleteEvent ? '<span class=\"delete-icon\" style=\"cursor: pointer;\">üóëÔ∏è</span>' : ''}\n          </div>\n        </div>`;\n    },\n    // Conditionally handle event clicks only if edit/delete is allowed\n    onEventClick: args => {\n      if (onDeleteEvent || onEditEvent) {\n        const eventId = args.e.id();\n        const target = args.originalEvent.target;\n\n        if (onDeleteEvent && target.classList.contains(\"delete-icon\")) {\n          onDeleteEvent(eventId);\n        } else if (onEditEvent && target.classList.contains(\"edit-icon\")) {\n          const event = formattedEvents.find(event => event.id === eventId);\n          onEditEvent(eventId, event);\n        } else {\n          const event = formattedEvents.find(event => event.id === eventId);\n          openModal(event); // Open modal with event details\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DayPilotCalendar, { ...config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), isModalOpen && selectedEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Event Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), console.log(selectedEvent), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Event Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedEvent.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Event Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedEvent.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Event Color:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedEvent.backColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Date/Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start: \", new Date(selectedEvent.start).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"End: \", new Date(selectedEvent.end).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: closeModal,\n          className: \"close-modal\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calendar, \"p5e5h0SbhVrbTyvPh/uTF4+Stmk=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","DayPilotCalendar","Calendar","startDate","events","onDeleteEvent","onEditEvent","isModalOpen","setIsModalOpen","selectedEvent","setSelectedEvent","openModal","event","closeModal","formattedEvents","map","id","text","start","Date","toISOString","end","backColor","participants","type","config","viewType","durationBarVisible","onBeforeEventRender","args","data","html","onEventClick","eventId","e","target","originalEvent","classList","contains","find","console","log","toLocaleString"],"sources":["C:/Users/alexm/VsCodeProjects/School Projects/CEN/SWE semester project/SWE-OnTask/frontend/src/components/Calendar.js"],"sourcesContent":["import { React, useState } from 'react';\r\nimport { DayPilotCalendar } from \"@daypilot/daypilot-lite-react\";\r\n\r\nconst Calendar = ({ startDate, events, onDeleteEvent, onEditEvent }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const openModal = (event) => {\r\n    setSelectedEvent(event);  // Store the selected event\r\n    setIsModalOpen(true);     // Open the modal\r\n  };\r\n  const closeModal = () => setIsModalOpen(false);  // Close the modal\r\n\r\n  const formattedEvents = events.map(event => ({\r\n    id: event.id,\r\n    text: event.text,\r\n    start: new Date(event.start).toISOString(),\r\n    end: new Date(event.end).toISOString(),\r\n    backColor: event.backColor,\r\n    participants: event.participants || 0,\r\n    type: event.type\r\n  }));\r\n\r\n  const config = {\r\n    viewType: \"Week\",\r\n    durationBarVisible: false,\r\n    startDate: startDate,\r\n    events: formattedEvents,\r\n\r\n    onBeforeEventRender: args => {\r\n      args.data.backColor = args.data.backColor || \"#ffffff\"; // Fallback to white if no color\r\n      args.data.html = `\r\n        <div style=\"display: flex; flex-direction: column; justify-content: space-between; height: 100%;\">\r\n          <div>${args.data.text}</div>\r\n          <div style=\"display: flex; justify-content: center; gap: 10px; margin-top: 5px;\">\r\n            ${onEditEvent ? '<span class=\"edit-icon\" style=\"cursor: pointer;\">‚úèÔ∏è</span>' : ''}\r\n            ${onDeleteEvent ? '<span class=\"delete-icon\" style=\"cursor: pointer;\">üóëÔ∏è</span>' : ''}\r\n          </div>\r\n        </div>`;\r\n    },\r\n\r\n    // Conditionally handle event clicks only if edit/delete is allowed\r\n    onEventClick: args => {\r\n      if (onDeleteEvent || onEditEvent) {\r\n        const eventId = args.e.id();\r\n        const target = args.originalEvent.target;\r\n\r\n        if (onDeleteEvent && target.classList.contains(\"delete-icon\")) {\r\n          onDeleteEvent(eventId);\r\n        } else if (onEditEvent && target.classList.contains(\"edit-icon\")) {\r\n          const event = formattedEvents.find(event => event.id === eventId);\r\n          onEditEvent(eventId, event);\r\n        } else {\r\n          const event = formattedEvents.find(event => event.id === eventId);\r\n          openModal(event); // Open modal with event details\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DayPilotCalendar {...config} />\r\n      \r\n      {/* Conditionally render the modal */}\r\n      {isModalOpen && selectedEvent && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <h1>Event Info</h1>\r\n            {console.log(selectedEvent)}\r\n            <h3>Event Title:</h3>\r\n            <p>{selectedEvent.text}</p>\r\n            <h3>Event Type:</h3>\r\n            <p>{selectedEvent.type}</p>\r\n            <h3>Event Color:</h3>\r\n            <p>{selectedEvent.backColor}</p>\r\n            <h3>Date/Time:</h3>\r\n            <p>Start: {new Date(selectedEvent.start).toLocaleString()}</p>\r\n            <p>End: {new Date(selectedEvent.end).toLocaleString()}</p>\r\n            <button type=\"button\" onClick={closeModal} className=\"close-modal\">\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;"],"mappings":"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"},"metadata":{},"sourceType":"module"}