{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexm\\\\VsCodeProjects\\\\School Projects\\\\CEN\\\\SWE semester project\\\\SWE-OnTask\\\\frontend\\\\src\\\\components\\\\Calendar.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { DayPilotCalendar } from \"@daypilot/daypilot-lite-react\";\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calendar = _ref => {\n  _s();\n\n  let {\n    startDate,\n    events,\n    onDeleteEvent,\n    onEditEvent\n  } = _ref;\n  const {\n    user\n  } = useAuthContext();\n  const filteredEvents = user ? events.filter(event => event.code === user.code) : [];\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isParentVerificationModalOpen, setIsParentVerificationModalOpen] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [isParentCodeVerified, setIsParentCodeVerified] = useState(false); // Track if the parent code is verified\n\n  const [enteredCode, setEnteredCode] = useState(''); // Store entered code\n\n  const [isCodeCorrect, setIsCodeCorrect] = useState(false); // Track if code is correct\n\n  const openModal = event => {\n    setSelectedEvent(event);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => setIsModalOpen(false);\n\n  const closeParentVerificationModal = () => setIsParentVerificationModalOpen(false);\n\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n\n  const openEditModal = event => {\n    setSelectedEvent(event);\n    setIsEditModalOpen(true);\n  };\n\n  const closeEditModal = () => setIsEditModalOpen(false);\n\n  const [text, setText] = useState('');\n  const [date, setDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [color, setColor] = useState('');\n  const [type, setType] = useState('');\n  const [classroom, setClassroom] = useState('');\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const typeOptions = ['Homework', 'Test', 'Document', 'Other'];\n  const colorOptions = ['Black', 'Grey', 'Red', 'OrangeRed', 'MediumVioletRed', 'Purple', 'BlueViolet', 'RoyalBlue', 'DarkBlue', 'ForestGreen'];\n\n  function separateDateTime(dateTime) {\n    const parts = dateTime.split('T');\n    const date = parts[0];\n    const time = parts[1];\n    return {\n      date,\n      time\n    };\n  }\n\n  const formattedEvents = events.map(event => ({\n    id: event.id,\n    text: event.text,\n    start: new Date(event.start).toISOString(),\n    end: new Date(event.end).toISOString(),\n    backColor: event.backColor,\n    participants: event.participants || 0,\n    type: event.type,\n    classroom: event.classroom\n  }));\n  const config = {\n    viewType: \"Week\",\n    durationBarVisible: false,\n    startDate: startDate,\n    events: formattedEvents,\n    onBeforeEventRender: args => {\n      args.data.backColor = args.data.backColor || \"#ffffff\";\n\n      if (user && user.role === 'student') {\n        if (isParentCodeVerified) {\n          args.data.html = `\n            <div style=\"display: flex; flex-direction: column; justify-content: space-between; height: 100%;\">\n              <div>${args.data.text}</div>\n              <div style=\"color: green;\">‚úÖ</div>\n            </div>`;\n        } else {\n          args.data.html = `\n            <div style=\"display: flex; flex-direction: column; justify-content: space-between; height: 100%;\">\n              <div>${args.data.text}</div>\n              <div class=\"verify-parent-code\" style=\"cursor: pointer; color: red;\">\n                ‚òëÔ∏è\n              </div>\n            </div>`;\n        }\n      } else if (user && user.role !== 'student') {\n        args.data.html = `\n          <div style=\"display: flex; flex-direction: column; justify-content: space-between; height: 100%;\">\n            <div>${args.data.text}</div>\n            <div style=\"display: flex; justify-content: center; gap: 10px; margin-top: 5px;\">\n              ${onEditEvent ? '<span class=\"edit-icon\" style=\"cursor: pointer;\">‚úèÔ∏è</span>' : ''}\n              ${onDeleteEvent ? '<span class=\"delete-icon\" style=\"cursor: pointer;\">üóëÔ∏è</span>' : ''}\n            </div>\n          </div>`;\n      } else {\n        args.data.html = `\n          <div style=\"display: flex; flex-direction: column; justify-content: space-between; height: 100%;\">\n            <div>${args.data.text}</div>\n            <div style=\"margin-top: 5px;\"></div>\n          </div>`;\n      }\n    },\n    onEventClick: args => {\n      const target = args.originalEvent.target; // Prevent opening the parent code verification modal if clicked on the checkmark and the parent code is not verified\n\n      if (target.classList.contains('verify-parent-code') && !isParentCodeVerified) {\n        openParentCodeVerificationModal(); // Open the verification modal\n\n        return; // Exit early so the event details modal doesn't open\n      } // Handle other event clicks (Edit/Delete)\n\n\n      if (onDeleteEvent || onEditEvent) {\n        const eventId = args.e.id();\n\n        if (onDeleteEvent && target.classList.contains(\"delete-icon\")) {\n          onDeleteEvent(eventId);\n        } else if (onEditEvent && target.classList.contains(\"edit-icon\")) {\n          const event = formattedEvents.find(event => event.id === eventId);\n          const {\n            date: eventStartDate,\n            time: eventStartTime\n          } = separateDateTime(event.start.toString());\n          const {\n            date: eventEndDate,\n            time: eventEndTime\n          } = separateDateTime(event.end.toString());\n          setText(event.text);\n          setType(event.type);\n          setColor(event.backColor);\n          setDate(eventStartDate);\n          setStartTime(eventStartTime);\n          setEndTime(eventEndTime);\n          setClassroom(event.classroom);\n          openEditModal(event);\n        } else {\n          console.log(isParentCodeVerified);\n          const event = formattedEvents.find(event => event.id === eventId);\n          openModal(event);\n        }\n      }\n    }\n  };\n\n  const openParentCodeVerificationModal = () => {\n    setIsParentVerificationModalOpen(true);\n  };\n\n  const handleCodeChange = e => {\n    setEnteredCode(e.target.value);\n  };\n\n  const verifyParentCode = e => {\n    e.preventDefault();\n\n    if (enteredCode === user.parentCode) {\n      setIsParentCodeVerified(true);\n      setIsCodeCorrect(true);\n      closeModal();\n    } else {\n      console.log(\"entered Code: \", enteredCode);\n      console.log(\"user.parentCode: \", user.parentCode);\n      setIsCodeCorrect(false);\n      setError('Invalid parent code');\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!user) {\n      setError('You must be logged in');\n      return;\n    }\n\n    if (!date || !startTime || !endTime || !type) {\n      setError('Please fill in all fields');\n      return;\n    }\n\n    const start = new Date(`${date}T${startTime}Z`);\n    const end = new Date(`${date}T${endTime}Z`);\n\n    if (isNaN(start.getTime()) || isNaN(end.getTime())) {\n      setError('Invalid date or time provided');\n      return;\n    }\n\n    const event = {\n      text,\n      color,\n      type,\n      start: start.toISOString(),\n      end: end.toISOString(),\n      classroom\n    };\n    onEditEvent(selectedEvent.id, event);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DayPilotCalendar, { ...config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), isModalOpen && selectedEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Event Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Event Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedEvent.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Event Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedEvent.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Event Color:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedEvent.backColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Date/Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start: \", new Date(selectedEvent.start).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"End: \", new Date(selectedEvent.end).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: closeModal,\n          className: \"close-modal\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this), isEditModalOpen && selectedEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"edit-event\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Event Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setText(e.target.value),\n            value: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Event Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-types\",\n            children: typeOptions.map(typeOption => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setType(typeOption),\n              children: typeOption\n            }, typeOption, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Event Color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-colors\",\n            children: colorOptions.map(colorOption => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setColor(colorOption),\n              style: {\n                backgroundColor: colorOption\n              }\n            }, colorOption, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Classroom:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setClassroom(e.target.value),\n            value: classroom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            onChange: e => setDate(e.target.value),\n            value: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            onChange: e => setStartTime(e.target.value),\n            value: startTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            onChange: e => setEndTime(e.target.value),\n            value: endTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: closeEditModal,\n          className: \"close-modal\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this), isParentVerificationModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Verify Parent Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: verifyParentCode,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: enteredCode,\n            onChange: handleCodeChange,\n            placeholder: \"Enter parent code\",\n            className: isCodeCorrect ? 'correct' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: isCodeCorrect ? 'submit-correct' : '',\n            children: \"Verify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: closeParentVerificationModal,\n          className: \"close-modal\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calendar, \"stNUiWMMHRBpT2FPYgv3nRZqMUM=\", false, function () {\n  return [useAuthContext];\n});\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","DayPilotCalendar","useAuthContext","Calendar","startDate","events","onDeleteEvent","onEditEvent","user","filteredEvents","filter","event","code","isModalOpen","setIsModalOpen","isParentVerificationModalOpen","setIsParentVerificationModalOpen","selectedEvent","setSelectedEvent","isParentCodeVerified","setIsParentCodeVerified","enteredCode","setEnteredCode","isCodeCorrect","setIsCodeCorrect","openModal","closeModal","closeParentVerificationModal","isEditModalOpen","setIsEditModalOpen","openEditModal","closeEditModal","text","setText","date","setDate","startTime","setStartTime","endTime","setEndTime","color","setColor","type","setType","classroom","setClassroom","error","setError","emptyFields","setEmptyFields","typeOptions","colorOptions","separateDateTime","dateTime","parts","split","time","formattedEvents","map","id","start","Date","toISOString","end","backColor","participants","config","viewType","durationBarVisible","onBeforeEventRender","args","data","role","html","onEventClick","target","originalEvent","classList","contains","openParentCodeVerificationModal","eventId","e","find","eventStartDate","eventStartTime","toString","eventEndDate","eventEndTime","console","log","handleCodeChange","value","verifyParentCode","preventDefault","parentCode","handleSubmit","isNaN","getTime","toLocaleString","typeOption","colorOption","backgroundColor"],"sources":["C:/Users/alexm/VsCodeProjects/School Projects/CEN/SWE semester project/SWE-OnTask/frontend/src/components/Calendar.js"],"sourcesContent":["import { React, useState } from 'react';\r\nimport { DayPilotCalendar } from \"@daypilot/daypilot-lite-react\";\r\nimport { useAuthContext } from '../hooks/useAuthContext';\r\n\r\nconst Calendar = ({ startDate, events, onDeleteEvent, onEditEvent }) => {\r\n  const { user } = useAuthContext();\r\n\r\n  const filteredEvents = user ? events.filter(event => event.code === user.code) : [];\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isParentVerificationModalOpen, setIsParentVerificationModalOpen] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [isParentCodeVerified, setIsParentCodeVerified] = useState(false);  // Track if the parent code is verified\r\n  const [enteredCode, setEnteredCode] = useState('');  // Store entered code\r\n  const [isCodeCorrect, setIsCodeCorrect] = useState(false);  // Track if code is correct\r\n\r\n\r\n  const openModal = (event) => {\r\n    setSelectedEvent(event);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => setIsModalOpen(false);\r\n  const closeParentVerificationModal = () => setIsParentVerificationModalOpen(false);\r\n\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n\r\n  const openEditModal = (event) => {\r\n    setSelectedEvent(event);\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const closeEditModal = () => setIsEditModalOpen(false);\r\n\r\n  const [text, setText] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [startTime, setStartTime] = useState('');\r\n  const [endTime, setEndTime] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [classroom, setClassroom] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [emptyFields, setEmptyFields] = useState([]);\r\n  const typeOptions = ['Homework', 'Test', 'Document', 'Other'];\r\n\r\n  const colorOptions = [\r\n    'Black', 'Grey', 'Red', 'OrangeRed', 'MediumVioletRed',\r\n    'Purple', 'BlueViolet', 'RoyalBlue', 'DarkBlue', 'ForestGreen'\r\n  ];\r\n\r\n  function separateDateTime(dateTime) {\r\n    const parts = dateTime.split('T');\r\n    const date = parts[0];\r\n    const time = parts[1];\r\n    return { date, time };\r\n  }\r\n\r\n  const formattedEvents = events.map(event => ({\r\n    id: event.id,\r\n    text: event.text,\r\n    start: new Date(event.start).toISOString(),\r\n    end: new Date(event.end).toISOString(),\r\n    backColor: event.backColor,\r\n    participants: event.participants || 0,\r\n    type: event.type,\r\n    classroom: event.classroom\r\n  }));\r\n\r\n  const config = {\r\n    viewType: \"Week\",\r\n    durationBarVisible: false,\r\n    startDate: startDate,\r\n    events: formattedEvents,\r\n  \r\n    onBeforeEventRender: args => {\r\n      args.data.backColor = args.data.backColor || \"#ffffff\";\r\n    \r\n      if (user && user.role === 'student') {\r\n        if (isParentCodeVerified) {\r\n          args.data.html = `\r\n            <div style=\"display: flex; flex-direction: column; justify-content: space-between; height: 100%;\">\r\n              <div>${args.data.text}</div>\r\n              <div style=\"color: green;\">‚úÖ</div>\r\n            </div>`;\r\n        } else {\r\n          args.data.html = `\r\n            <div style=\"display: flex; flex-direction: column; justify-content: space-between; height: 100%;\">\r\n              <div>${args.data.text}</div>\r\n              <div class=\"verify-parent-code\" style=\"cursor: pointer; color: red;\">\r\n                ‚òëÔ∏è\r\n              </div>\r\n            </div>`;\r\n        }\r\n        \r\n      } else if (user && user.role !== 'student') {\r\n        args.data.html = `\r\n          <div style=\"display: flex; flex-direction: column; justify-content: space-between; height: 100%;\">\r\n            <div>${args.data.text}</div>\r\n            <div style=\"display: flex; justify-content: center; gap: 10px; margin-top: 5px;\">\r\n              ${onEditEvent ? '<span class=\"edit-icon\" style=\"cursor: pointer;\">‚úèÔ∏è</span>' : ''}\r\n              ${onDeleteEvent ? '<span class=\"delete-icon\" style=\"cursor: pointer;\">üóëÔ∏è</span>' : ''}\r\n            </div>\r\n          </div>`;\r\n      } else {\r\n        args.data.html = `\r\n          <div style=\"display: flex; flex-direction: column; justify-content: space-between; height: 100%;\">\r\n            <div>${args.data.text}</div>\r\n            <div style=\"margin-top: 5px;\"></div>\r\n          </div>`;\r\n      }\r\n    }\r\n    ,\r\n  \r\n    onEventClick: args => {\r\n      const target = args.originalEvent.target;\r\n    \r\n      // Prevent opening the parent code verification modal if clicked on the checkmark and the parent code is not verified\r\n      if (target.classList.contains('verify-parent-code') && !isParentCodeVerified) {\r\n        openParentCodeVerificationModal();  // Open the verification modal\r\n        return;  // Exit early so the event details modal doesn't open\r\n      }\r\n    \r\n      // Handle other event clicks (Edit/Delete)\r\n      if (onDeleteEvent || onEditEvent) {\r\n        const eventId = args.e.id();\r\n    \r\n        if (onDeleteEvent && target.classList.contains(\"delete-icon\")) {\r\n          onDeleteEvent(eventId);\r\n        } else if (onEditEvent && target.classList.contains(\"edit-icon\")) {\r\n          const event = formattedEvents.find(event => event.id === eventId);\r\n    \r\n          const { date: eventStartDate, time: eventStartTime } = separateDateTime(event.start.toString());\r\n          const { date: eventEndDate, time: eventEndTime } = separateDateTime(event.end.toString());\r\n          setText(event.text);\r\n          setType(event.type);\r\n          setColor(event.backColor);\r\n          setDate(eventStartDate);\r\n          setStartTime(eventStartTime);\r\n          setEndTime(eventEndTime);\r\n          setClassroom(event.classroom);\r\n    \r\n          openEditModal(event);\r\n        } else {\r\n          console.log(isParentCodeVerified);\r\n          const event = formattedEvents.find(event => event.id === eventId);\r\n          openModal(event);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const openParentCodeVerificationModal = () => {\r\n    setIsParentVerificationModalOpen(true);\r\n  };\r\n\r\n  const handleCodeChange = (e) => {\r\n    setEnteredCode(e.target.value);\r\n  };\r\n\r\n  const verifyParentCode = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (enteredCode === user.parentCode) {\r\n      setIsParentCodeVerified(true);\r\n      setIsCodeCorrect(true);\r\n      closeModal();\r\n    } else {\r\n      console.log(\"entered Code: \", enteredCode);\r\n      console.log(\"user.parentCode: \", user.parentCode);\r\n      \r\n      setIsCodeCorrect(false);\r\n      setError('Invalid parent code');\r\n    }\r\n  };\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!user) {\r\n      setError('You must be logged in');\r\n      return;\r\n    }\r\n\r\n    if (!date || !startTime || !endTime || !type) {\r\n      setError('Please fill in all fields');\r\n      return;\r\n    }\r\n\r\n    const start = new Date(`${date}T${startTime}Z`);\r\n    const end = new Date(`${date}T${endTime}Z`);\r\n\r\n    if (isNaN(start.getTime()) || isNaN(end.getTime())) {\r\n      setError('Invalid date or time provided');\r\n      return;\r\n    }\r\n\r\n    const event = {\r\n      text,\r\n      color,\r\n      type,\r\n      start: start.toISOString(),\r\n      end: end.toISOString(),\r\n      classroom\r\n    };\r\n\r\n    onEditEvent(selectedEvent.id, event);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DayPilotCalendar {...config} />\r\n\r\n      {isModalOpen && selectedEvent && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <h1>Event Info</h1>\r\n            <h3>Event Title:</h3>\r\n            <p>{selectedEvent.text}</p>\r\n\r\n            <h3>Event Type:</h3>\r\n            <p>{selectedEvent.type}</p>\r\n\r\n            <h3>Event Color:</h3>\r\n            <p>{selectedEvent.backColor}</p>\r\n\r\n            <h3>Date/Time:</h3>\r\n            <p>Start: {new Date(selectedEvent.start).toLocaleString()}</p>\r\n            <p>End: {new Date(selectedEvent.end).toLocaleString()}</p>\r\n\r\n            <button type=\"button\" onClick={closeModal} className=\"close-modal\">\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isEditModalOpen && selectedEvent && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <form className=\"edit-event\" onSubmit={handleSubmit}>\r\n              <h3>Edit Event</h3>\r\n              <label>Event Title:</label>\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setText(e.target.value)}\r\n                value={text}\r\n              />\r\n\r\n              <label>Event Type:</label>\r\n              <div className=\"event-types\">\r\n                {typeOptions.map(typeOption => (\r\n                  <button\r\n                    key={typeOption}\r\n                    type=\"button\"\r\n                    onClick={() => setType(typeOption)}\r\n                  >\r\n                    {typeOption}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n\r\n              <label>Event Color:</label>\r\n              <div className=\"event-colors\">\r\n                {colorOptions.map(colorOption => (\r\n                  <button\r\n                    key={colorOption}\r\n                    type=\"button\"\r\n                    onClick={() => setColor(colorOption)}\r\n                    style={{ backgroundColor: colorOption }}\r\n                  />\r\n                ))}\r\n              </div>\r\n\r\n              <label>Classroom:</label>\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setClassroom(e.target.value)}\r\n                value={classroom}\r\n              />\r\n\r\n              <label>Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                onChange={(e) => setDate(e.target.value)}\r\n                value={date}\r\n              />\r\n\r\n              <label>Start Time:</label>\r\n              <input\r\n                type=\"time\"\r\n                onChange={(e) => setStartTime(e.target.value)}\r\n                value={startTime}\r\n              />\r\n\r\n              <label>End Time:</label>\r\n              <input\r\n                type=\"time\"\r\n                onChange={(e) => setEndTime(e.target.value)}\r\n                value={endTime}\r\n              />\r\n\r\n              <button type=\"submit\">Save</button>\r\n            </form>\r\n\r\n            <button type=\"button\" onClick={closeEditModal} className=\"close-modal\">\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    {isParentVerificationModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <h4>Verify Parent Code</h4>\r\n            <form onSubmit={verifyParentCode}>\r\n              <input\r\n                type=\"text\"\r\n                value={enteredCode}\r\n                onChange={handleCodeChange}\r\n                placeholder=\"Enter parent code\"\r\n                className={isCodeCorrect ? 'correct' : ''}\r\n              />\r\n              <button type=\"submit\" className={isCodeCorrect ? 'submit-correct' : ''}>\r\n                Verify\r\n              </button>\r\n              {error && <p>{error}</p>}\r\n            </form>\r\n            <button type=\"button\" onClick={closeParentVerificationModal} className=\"close-modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}