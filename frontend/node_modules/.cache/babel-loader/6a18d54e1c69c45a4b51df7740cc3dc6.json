{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexm\\\\VsCodeProjects\\\\School Projects\\\\CEN\\\\SWE semester project\\\\SWE-OnTask\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { useEventsContext } from '../hooks/useEventsContext'; // Import the events context\n\nimport CalendarNav from '../components/CalendarNav';\nimport Calendar from '../components/Calendar';\nimport EventForm from '../components/CalendarForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    user\n  } = useAuthContext();\n  const {\n    events,\n    dispatch: eventDispatch\n  } = useEventsContext(); // Get events and dispatch\n\n  const currentDate = new Date().toISOString().split('T')[0]; // Get the current date in 'YYYY-MM-DD' format\n\n  const [startDate, setStartDate] = useState(currentDate);\n\n  const fetchEvents = async () => {\n    const response = await fetch('/api/events', {\n      headers: {\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    const json = await response.json();\n\n    if (response.ok) {\n      const mappedEvents = json.map(event => ({\n        id: event._id,\n        text: event.text,\n        start: event.start,\n        end: event.end,\n        backColor: event.backColor || \"#ffffff\",\n        participants: event.participants || 0\n      }));\n      eventDispatch({\n        type: 'SET_EVENTS',\n        payload: mappedEvents\n      });\n    } else {\n      console.error(\"Error fetching events:\", json);\n    }\n  };\n\n  useEffect(() => {\n    if (user) {\n      fetchEvents(); // Fetch events when user is present\n    }\n  }, [eventDispatch, user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CalendarNav, {\n        setStartDate: setStartDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        startDate: startDate,\n        events: events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EventForm, {\n      fetchEvents: fetchEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"BetH26MiDicKwSWFdDOt5e9nxpU=\", false, function () {\n  return [useAuthContext, useEventsContext];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useAuthContext","useEventsContext","CalendarNav","Calendar","EventForm","Home","user","events","dispatch","eventDispatch","currentDate","Date","toISOString","split","startDate","setStartDate","fetchEvents","response","fetch","headers","token","json","ok","mappedEvents","map","event","id","_id","text","start","end","backColor","participants","type","payload","console","error"],"sources":["C:/Users/alexm/VsCodeProjects/School Projects/CEN/SWE semester project/SWE-OnTask/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useAuthContext } from \"../hooks/useAuthContext\";\r\nimport { useEventsContext } from '../hooks/useEventsContext'; // Import the events context\r\nimport CalendarNav from '../components/CalendarNav';\r\nimport Calendar from '../components/Calendar';\r\nimport EventForm from '../components/CalendarForm';\r\n\r\nconst Home = () => {\r\n    const { user } = useAuthContext();\r\n    const { events, dispatch: eventDispatch } = useEventsContext(); // Get events and dispatch\r\n    const currentDate = new Date().toISOString().split('T')[0]; // Get the current date in 'YYYY-MM-DD' format\r\n    const [startDate, setStartDate] = useState(currentDate);\r\n    \r\n    const fetchEvents = async () => {\r\n        const response = await fetch('/api/events', {\r\n            headers: { 'Authorization': `Bearer ${user.token}` },\r\n        });\r\n        const json = await response.json();\r\n        \r\n        if (response.ok) {\r\n            const mappedEvents = json.map(event => ({\r\n                id: event._id,\r\n                text: event.text,\r\n                start: event.start,\r\n                end: event.end,\r\n                backColor: event.backColor || \"#ffffff\",\r\n                participants: event.participants || 0,\r\n            }));\r\n            eventDispatch({ type: 'SET_EVENTS', payload: mappedEvents });\r\n        } else {\r\n            console.error(\"Error fetching events:\", json);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            fetchEvents(); // Fetch events when user is present\r\n        }\r\n    }, [eventDispatch, user]);\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <div>\r\n                <CalendarNav setStartDate={setStartDate} />\r\n            </div>\r\n            <div className='calendar'>\r\n                <Calendar startDate={startDate} events={events} /> {/* Pass events to Calendar */}\r\n            </div>\r\n            <EventForm fetchEvents={fetchEvents} /> {/* Pass fetchEvents to EventForm */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,gBAAT,QAAiC,2BAAjC,C,CAA8D;;AAC9D,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACf,MAAM;IAAEC;EAAF,IAAWN,cAAc,EAA/B;EACA,MAAM;IAAEO,MAAF;IAAUC,QAAQ,EAAEC;EAApB,IAAsCR,gBAAgB,EAA5D,CAFe,CAEiD;;EAChE,MAAMS,WAAW,GAAG,IAAIC,IAAJ,GAAWC,WAAX,GAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAApB,CAHe,CAG6C;;EAC5D,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAACW,WAAD,CAA1C;;EAEA,MAAMM,WAAW,GAAG,YAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAgB;MACxCC,OAAO,EAAE;QAAE,iBAAkB,UAASb,IAAI,CAACc,KAAM;MAAxC;IAD+B,CAAhB,CAA5B;IAGA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAT,EAAnB;;IAEA,IAAIJ,QAAQ,CAACK,EAAb,EAAiB;MACb,MAAMC,YAAY,GAAGF,IAAI,CAACG,GAAL,CAASC,KAAK,KAAK;QACpCC,EAAE,EAAED,KAAK,CAACE,GAD0B;QAEpCC,IAAI,EAAEH,KAAK,CAACG,IAFwB;QAGpCC,KAAK,EAAEJ,KAAK,CAACI,KAHuB;QAIpCC,GAAG,EAAEL,KAAK,CAACK,GAJyB;QAKpCC,SAAS,EAAEN,KAAK,CAACM,SAAN,IAAmB,SALM;QAMpCC,YAAY,EAAEP,KAAK,CAACO,YAAN,IAAsB;MANA,CAAL,CAAd,CAArB;MAQAvB,aAAa,CAAC;QAAEwB,IAAI,EAAE,YAAR;QAAsBC,OAAO,EAAEX;MAA/B,CAAD,CAAb;IACH,CAVD,MAUO;MACHY,OAAO,CAACC,KAAR,CAAc,wBAAd,EAAwCf,IAAxC;IACH;EACJ,CAnBD;;EAqBAvB,SAAS,CAAC,MAAM;IACZ,IAAIQ,IAAJ,EAAU;MACNU,WAAW,GADL,CACS;IAClB;EACJ,CAJQ,EAIN,CAACP,aAAD,EAAgBH,IAAhB,CAJM,CAAT;EAMA,oBACI;IAAK,SAAS,EAAC,MAAf;IAAA,wBACI;MAAA,uBACI,QAAC,WAAD;QAAa,YAAY,EAAES;MAA3B;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAK,SAAS,EAAC,UAAf;MAAA,wBACI,QAAC,QAAD;QAAU,SAAS,EAAED,SAArB;QAAgC,MAAM,EAAEP;MAAxC;QAAA;QAAA;QAAA;MAAA,QADJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ,eAOI,QAAC,SAAD;MAAW,WAAW,EAAES;IAAxB;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CA5CD;;GAAMX,I;UACeL,c,EAC2BC,gB;;;KAF1CI,I;AA8CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}