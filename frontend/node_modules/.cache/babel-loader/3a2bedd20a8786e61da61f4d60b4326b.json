{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexm\\\\VsCodeProjects\\\\School Projects\\\\CEN\\\\SWE semester project\\\\SWE-OnTask\\\\frontend\\\\src\\\\components\\\\Calendar.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { DayPilotCalendar } from \"@daypilot/daypilot-lite-react\";\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calendar = _ref => {\n  _s();\n\n  let {\n    startDate,\n    events,\n    onDeleteEvent,\n    onEditEvent\n  } = _ref;\n  const {\n    user\n  } = useAuthContext();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n\n  const openModal = event => {\n    setSelectedEvent(event); // Store the selected event\n\n    setIsModalOpen(true); // Open the modal\n  };\n\n  const closeModal = () => setIsModalOpen(false); // Close the modal\n\n\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n\n  const openEditModal = event => {\n    setSelectedEvent(event); // Store the selected event\n\n    setIsEditModalOpen(true); // Open the modal\n  };\n\n  const closeEditModal = () => setIsEditModalOpen(false); // Close the modal\n\n\n  const [text, setText] = useState('');\n  const [date, setDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [color, setColor] = useState('');\n  const [type, setType] = useState('');\n  const [classroom, setClassroom] = useState('');\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const [typeOptions, setTypeOptions] = useState(['Homework', 'Test', 'Document', 'Other']);\n  const colorOptions = ['Black', 'Grey', 'Red', 'OrangeRed', 'MediumVioletRed', 'Purple', 'BlueViolet', 'RoyalBlue', 'DarkBlue', 'ForestGreen'];\n\n  function separateDateTime(dateTime) {\n    const parts = dateTime.split('T');\n    const date = parts[0]; // The date part\n\n    const time = parts[1]; // The time part\n\n    return {\n      date,\n      time\n    };\n  }\n\n  const formattedEvents = events.map(event => ({\n    id: event.id,\n    text: event.text,\n    start: new Date(event.start).toISOString(),\n    end: new Date(event.end).toISOString(),\n    backColor: event.backColor,\n    participants: event.participants || 0,\n    type: event.type,\n    classroom: event.classroom\n  }));\n  const config = {\n    viewType: \"Week\",\n    durationBarVisible: false,\n    startDate: startDate,\n    events: formattedEvents,\n    onBeforeEventRender: args => {\n      args.data.backColor = args.data.backColor || \"#ffffff\"; // Fallback to white if no color\n\n      args.data.html = `\n        <div style=\"display: flex; flex-direction: column; justify-content: space-between; height: 100%;\">\n          <div>${args.data.text}</div>\n          <div style=\"display: flex; justify-content: center; gap: 10px; margin-top: 5px;\">\n            ${onEditEvent ? '<span class=\"edit-icon\" style=\"cursor: pointer;\">‚úèÔ∏è</span>' : ''}\n            ${onDeleteEvent ? '<span class=\"delete-icon\" style=\"cursor: pointer;\">üóëÔ∏è</span>' : ''}\n          </div>\n        </div>`;\n    },\n    // Conditionally handle event clicks only if edit/delete is allowed\n    onEventClick: args => {\n      if (onDeleteEvent || onEditEvent) {\n        const eventId = args.e.id();\n        const target = args.originalEvent.target;\n\n        if (onDeleteEvent && target.classList.contains(\"delete-icon\")) {\n          onDeleteEvent(eventId);\n        } else if (onEditEvent && target.classList.contains(\"edit-icon\")) {\n          const event = formattedEvents.find(event => event.id === eventId);\n          const {\n            date: eventStartDate,\n            time: eventStartTime\n          } = separateDateTime(event.start.toString());\n          const {\n            date: eventEndDate,\n            time: eventEndTime\n          } = separateDateTime(event.end.toString());\n          setText(event.text);\n          setType(event.type);\n          setColor(event.backColor);\n          setDate(eventStartDate);\n          setStartTime(eventStartTime);\n          setEndTime(eventEndTime);\n          setClassroom(event.classroom);\n          openEditModal(event); //onEditEvent(eventId, event);\n        } else {\n          const event = formattedEvents.find(event => event.id === eventId);\n          openModal(event); // Open modal with event details\n        }\n      }\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!user) {\n      setError('You must be logged in');\n      return;\n    }\n\n    if (!date || !startTime || !endTime || !type) {\n      setError('Please fill in all fields');\n      return;\n    }\n\n    const start = new Date(`${date}T${startTime}Z`);\n    const end = new Date(`${date}T${endTime}Z`);\n\n    if (isNaN(start.getTime()) || isNaN(end.getTime())) {\n      setError('Invalid date or time provided');\n      return;\n    }\n\n    const event = {\n      text,\n      color,\n      type,\n      start: start.toISOString(),\n      end: end.toISOString(),\n      classroom\n    };\n    onEditEvent(selectedEvent.id, event);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DayPilotCalendar, { ...config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), isModalOpen && selectedEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Event Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Event Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedEvent.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Event Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedEvent.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Event Color:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedEvent.backColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Date/Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start: \", new Date(selectedEvent.start).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"End: \", new Date(selectedEvent.end).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), console.log(selectedEvent.start.toString()), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: closeModal,\n          className: \"close-modal\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), isEditModalOpen && selectedEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [console.log('Modal values:', date, startTime, endTime), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"edit-event\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Event Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setText(e.target.value),\n            value: text,\n            className: emptyFields.includes('text') ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Event Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-types\",\n            children: typeOptions.map(typeOption => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"event-type-button\",\n              onClick: () => setType(typeOption),\n              style: {\n                background: type === typeOption ? 'var(--primary)' : '#fff',\n                color: type === typeOption ? '#fff' : 'var(--primary)',\n                border: '2px solid var(--primary)',\n                padding: '6px 10px',\n                borderRadius: '4px',\n                fontFamily: 'Poppins',\n                cursor: 'pointer',\n                fontSize: '1em',\n                margin: '2px',\n                position: 'relative'\n              },\n              children: typeOption\n            }, typeOption, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Event Color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-picker\",\n            children: colorOptions.map(colorOption => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `color-circle ${color === colorOption ? 'selected' : ''}`,\n              style: {\n                backgroundColor: colorOption\n              },\n              onClick: () => setColor(colorOption)\n            }, colorOption, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            onChange: e => setDate(e.target.value),\n            value: date,\n            className: emptyFields.includes('date') ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            onChange: e => setStartTime(e.target.value),\n            value: startTime,\n            className: emptyFields.includes('startTime') ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            onChange: e => setEndTime(e.target.value),\n            value: endTime,\n            className: emptyFields.includes('endTime') ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            value: classroom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: closeEditModal,\n            className: \"submit\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calendar, \"JHxvkzOzM1v9i6XpQaiA0e/jJ/g=\", false, function () {\n  return [useAuthContext];\n});\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","DayPilotCalendar","useAuthContext","Calendar","startDate","events","onDeleteEvent","onEditEvent","user","isModalOpen","setIsModalOpen","selectedEvent","setSelectedEvent","openModal","event","closeModal","isEditModalOpen","setIsEditModalOpen","openEditModal","closeEditModal","text","setText","date","setDate","startTime","setStartTime","endTime","setEndTime","color","setColor","type","setType","classroom","setClassroom","error","setError","emptyFields","setEmptyFields","typeOptions","setTypeOptions","colorOptions","separateDateTime","dateTime","parts","split","time","formattedEvents","map","id","start","Date","toISOString","end","backColor","participants","config","viewType","durationBarVisible","onBeforeEventRender","args","data","html","onEventClick","eventId","e","target","originalEvent","classList","contains","find","eventStartDate","eventStartTime","toString","eventEndDate","eventEndTime","handleSubmit","preventDefault","isNaN","getTime","toLocaleString","console","log","value","includes","typeOption","background","border","padding","borderRadius","fontFamily","cursor","fontSize","margin","position","colorOption","backgroundColor"],"sources":["C:/Users/alexm/VsCodeProjects/School Projects/CEN/SWE semester project/SWE-OnTask/frontend/src/components/Calendar.js"],"sourcesContent":["import { React, useState } from 'react';\r\nimport { DayPilotCalendar } from \"@daypilot/daypilot-lite-react\";\r\nimport { useAuthContext } from '../hooks/useAuthContext';\r\n\r\nconst Calendar = ({ startDate, events, onDeleteEvent, onEditEvent }) => {\r\n  const { user } = useAuthContext();\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n\r\n  const openModal = (event) => {\r\n\r\n    setSelectedEvent(event);  // Store the selected event\r\n    setIsModalOpen(true);     // Open the modal\r\n  };\r\n  const closeModal = () => setIsModalOpen(false);  // Close the modal\r\n\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n\r\n  const openEditModal = (event) => {\r\n\r\n    setSelectedEvent(event);  // Store the selected event\r\n    setIsEditModalOpen(true);     // Open the modal\r\n  };\r\n  const closeEditModal = () => setIsEditModalOpen(false);  // Close the modal\r\n\r\n  const [text, setText] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [startTime, setStartTime] = useState('');\r\n  const [endTime, setEndTime] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [classroom, setClassroom] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [emptyFields, setEmptyFields] = useState([]);\r\n  const [typeOptions, setTypeOptions] = useState(['Homework', 'Test', 'Document', 'Other']);\r\n\r\n  const colorOptions = [\r\n    'Black', 'Grey', 'Red', 'OrangeRed', 'MediumVioletRed',\r\n    'Purple', 'BlueViolet', 'RoyalBlue', 'DarkBlue', 'ForestGreen'\r\n  ];\r\n\r\n  function separateDateTime(dateTime) {\r\n    const parts = dateTime.split('T');\r\n    const date = parts[0]; // The date part\r\n    const time = parts[1]; // The time part\r\n    return { date, time };\r\n  }\r\n\r\n  const formattedEvents = events.map(event => ({\r\n    id: event.id,\r\n    text: event.text,\r\n    start: new Date(event.start).toISOString(),\r\n    end: new Date(event.end).toISOString(),\r\n    backColor: event.backColor,\r\n    participants: event.participants || 0,\r\n    type: event.type,\r\n    classroom: event.classroom\r\n  }));\r\n\r\n  const config = {\r\n    viewType: \"Week\",\r\n    durationBarVisible: false,\r\n    startDate: startDate,\r\n    events: formattedEvents,\r\n    \r\n    onBeforeEventRender: args => {\r\n      args.data.backColor = args.data.backColor || \"#ffffff\"; // Fallback to white if no color\r\n      args.data.html = `\r\n        <div style=\"display: flex; flex-direction: column; justify-content: space-between; height: 100%;\">\r\n          <div>${args.data.text}</div>\r\n          <div style=\"display: flex; justify-content: center; gap: 10px; margin-top: 5px;\">\r\n            ${onEditEvent ? '<span class=\"edit-icon\" style=\"cursor: pointer;\">‚úèÔ∏è</span>' : ''}\r\n            ${onDeleteEvent ? '<span class=\"delete-icon\" style=\"cursor: pointer;\">üóëÔ∏è</span>' : ''}\r\n          </div>\r\n        </div>`;\r\n    },\r\n\r\n    // Conditionally handle event clicks only if edit/delete is allowed\r\n    onEventClick: args => {\r\n      if (onDeleteEvent || onEditEvent) {\r\n        const eventId = args.e.id();\r\n        const target = args.originalEvent.target;\r\n\r\n        if (onDeleteEvent && target.classList.contains(\"delete-icon\")) {\r\n          onDeleteEvent(eventId);\r\n        } else if (onEditEvent && target.classList.contains(\"edit-icon\")) {\r\n          const event = formattedEvents.find(event => event.id === eventId);\r\n          \r\n          const { date: eventStartDate, time: eventStartTime } = separateDateTime(event.start.toString());\r\n          const { date: eventEndDate, time: eventEndTime } = separateDateTime(event.end.toString());\r\n\r\n          setText(event.text);\r\n          setType(event.type);\r\n          setColor(event.backColor);\r\n          setDate(eventStartDate);\r\n          setStartTime(eventStartTime);\r\n          setEndTime(eventEndTime);\r\n          setClassroom(event.classroom);\r\n\r\n          openEditModal(event);\r\n          //onEditEvent(eventId, event);\r\n        } else {\r\n          const event = formattedEvents.find(event => event.id === eventId);\r\n          openModal(event); // Open modal with event details\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!user) {\r\n      setError('You must be logged in');\r\n      return;\r\n    }\r\n\r\n    if (!date || !startTime || !endTime || !type) {\r\n      setError('Please fill in all fields');\r\n      return;\r\n    }\r\n\r\n    const start = new Date(`${date}T${startTime}Z`);\r\n    const end = new Date(`${date}T${endTime}Z`);\r\n\r\n    if (isNaN(start.getTime()) || isNaN(end.getTime())) {\r\n      setError('Invalid date or time provided');\r\n      return;\r\n    }\r\n\r\n    const event = { \r\n      text,\r\n      color,\r\n      type,\r\n      start: start.toISOString(),\r\n      end: end.toISOString(),\r\n      classroom\r\n    };\r\n\r\n    onEditEvent(selectedEvent.id, event)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DayPilotCalendar {...config} />\r\n      \r\n      {isModalOpen && selectedEvent && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <h1>Event Info</h1>\r\n\r\n            <h3>Event Title:</h3>\r\n            <p>{selectedEvent.text}</p>\r\n\r\n            <h3>Event Type:</h3>\r\n            <p>{selectedEvent.type}</p>\r\n\r\n            <h3>Event Color:</h3>\r\n            <p>{selectedEvent.backColor}</p>\r\n\r\n            <h3>Date/Time:</h3>\r\n            <p>Start: {new Date(selectedEvent.start).toLocaleString()}</p>\r\n            <p>End: {new Date(selectedEvent.end).toLocaleString()}</p>\r\n            {console.log(selectedEvent.start.toString())}\r\n\r\n            <button type=\"button\" onClick={closeModal} className=\"close-modal\">\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isEditModalOpen && selectedEvent && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            {console.log('Modal values:', date, startTime, endTime)}\r\n          <form className=\"edit-event\" onSubmit={handleSubmit}>\r\n              <h3>Edit Event</h3>\r\n\r\n              <label>Event Title:</label>\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setText(e.target.value)}\r\n                value={text}\r\n                className={emptyFields.includes('text') ? 'error' : ''}\r\n              />\r\n\r\n              <label>Event Type:</label>\r\n              <div className=\"event-types\">\r\n                {typeOptions.map(typeOption => (\r\n                  <button\r\n                    key={typeOption}\r\n                    type=\"button\"\r\n                    className=\"event-type-button\"\r\n                    onClick={() => setType(typeOption)}\r\n                    style={{\r\n                      background: type === typeOption ? 'var(--primary)' : '#fff',\r\n                      color: type === typeOption ? '#fff' : 'var(--primary)',\r\n                      border: '2px solid var(--primary)',\r\n                      padding: '6px 10px',\r\n                      borderRadius: '4px',\r\n                      fontFamily: 'Poppins',\r\n                      cursor: 'pointer',\r\n                      fontSize: '1em',\r\n                      margin: '2px',\r\n                      position: 'relative'\r\n                    }}\r\n                  >\r\n                    {typeOption}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n\r\n              <label>Event Color:</label>\r\n              <div className=\"color-picker\">\r\n                {colorOptions.map(colorOption => (\r\n                  <div\r\n                    key={colorOption}\r\n                    className={`color-circle ${color === colorOption ? 'selected' : ''}`}\r\n                    style={{ backgroundColor: colorOption }}\r\n                    onClick={() => setColor(colorOption)}\r\n                  />\r\n                ))}\r\n              </div>\r\n\r\n              <label>Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                onChange={(e) => setDate(e.target.value)}\r\n                value={date}\r\n                className={emptyFields.includes('date') ? 'error' : ''}\r\n              />\r\n\r\n              <label>Start Time:</label>\r\n              <input\r\n                type=\"time\"\r\n                onChange={(e) => setStartTime(e.target.value)}\r\n                value={startTime}\r\n                className={emptyFields.includes('startTime') ? 'error' : ''}\r\n              />\r\n\r\n              <label>End Time:</label>\r\n              <input\r\n                type=\"time\"\r\n                onChange={(e) => setEndTime(e.target.value)}\r\n                value={endTime}\r\n                className={emptyFields.includes('endTime') ? 'error' : ''}\r\n              />\r\n\r\n              <input \r\n                type=\"hidden\"\r\n                value={classroom}\r\n              />\r\n\r\n              <button type=\"submit\" className=\"submit\">Save Changes</button>\r\n              {error && <div className=\"error\">{error}</div>}\r\n\r\n              <button type=\"button\" onClick={closeEditModal} className=\"submit\">\r\n                Close\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}