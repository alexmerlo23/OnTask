{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexm\\\\VsCodeProjects\\\\School Projects\\\\CEN\\\\SWE semester project\\\\SWE-OnTask\\\\frontend\\\\src\\\\pages\\\\Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Account = () => {\n  _s();\n\n  const {\n    user,\n    dispatch\n  } = useAuthContext();\n  const [classroomData, setClassroomData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [teacherCode, setTeacherCode] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(\"\"); // Fetch classroom data for teacher or student\n\n  useEffect(() => {\n    if (user) {\n      const fetchClassroom = async () => {\n        try {\n          let endpoint = \"\";\n\n          if (user.role === \"teacher\") {\n            endpoint = `/api/classes/by-email?email=${user.email}`;\n          } else if (user.role === \"student\" && user.code) {\n            // Use user.code instead of user.classroomCode\n            endpoint = `/api/classes/by-code/${user.code}`;\n          }\n\n          if (endpoint) {\n            console.log(\"Fetching data from endpoint:\", endpoint); // Add this log\n\n            const response = await fetch(endpoint, {\n              method: \"GET\",\n              headers: {\n                Authorization: `Bearer ${user.token}`\n              }\n            });\n\n            if (!response.ok) {\n              throw new Error(`Failed to fetch classroom: ${response.status} ${response.statusText}`);\n            }\n\n            const contentType = response.headers.get(\"Content-Type\");\n\n            if (contentType && contentType.includes(\"application/json\")) {\n              const data = await response.json();\n              console.log(\"Fetched data:\", data); // Add this log to check what data comes back\n\n              setClassroomData(data);\n            } else {\n              const errorText = await response.text(); // If not JSON, get the error page text\n\n              throw new Error(`Unexpected response format: ${errorText}`);\n            }\n          }\n        } catch (error) {\n          console.error(\"Error fetching classroom:\", error);\n          setError(error.message);\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchClassroom();\n    }\n  }, [user]); // Handle teacher code input submission for students\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    setSuccess(\"\");\n    setLoading(true);\n\n    if (!user) {\n      setError(\"User is not logged in\");\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await fetch(\"/api/user\", {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        },\n        body: JSON.stringify({\n          email: user.email,\n          // Include the user's email for identification\n          newCode: teacherCode // Use the entered teacher's code\n\n        })\n      });\n      const json = await response.json();\n\n      if (!response.ok) {\n        throw new Error(json.error || \"Failed to join the class.\");\n      } // Update user context and local storage\n\n\n      const updatedUser = { ...user,\n        code: teacherCode\n      };\n      dispatch({\n        type: \"UPDATE_USER\",\n        payload: updatedUser\n      });\n      localStorage.setItem(\"user\", JSON.stringify(updatedUser));\n      console.log(\"Classroom data after join:\", json); // Add this log to see the classroom data\n\n      setClassroomData(json);\n      setSuccess(\"Successfully joined the class!\");\n    } catch (err) {\n      console.error(\"Error joining class:\", err);\n      setError(err.message || \"An error occurred. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please log in to view your account details.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Account Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Account Type: \", user.role]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), user.role === \"teacher\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: classroomData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Class Name: \", classroomData.classroomName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Class Code: \", classroomData.code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No classroom associated with this email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), user.role === \"student\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!classroomData && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Enter Teacher's Code:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: teacherCode,\n            onChange: e => setTeacherCode(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"green\"\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }, this), classroomData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Class Name: \", classroomData.classroomName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Class Code: \", classroomData.code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Teacher's Email: \", classroomData.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No classroom associated yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Account, \"rNLycu8FW49w0sFhsYxLV5HhF2c=\", false, function () {\n  return [useAuthContext];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useEffect","useState","useAuthContext","Account","user","dispatch","classroomData","setClassroomData","loading","setLoading","teacherCode","setTeacherCode","error","setError","success","setSuccess","fetchClassroom","endpoint","role","email","code","console","log","response","fetch","method","headers","Authorization","token","ok","Error","status","statusText","contentType","get","includes","data","json","errorText","text","message","handleSubmit","e","preventDefault","body","JSON","stringify","newCode","updatedUser","type","payload","localStorage","setItem","err","name","classroomName","target","value","color"],"sources":["C:/Users/alexm/VsCodeProjects/School Projects/CEN/SWE semester project/SWE-OnTask/frontend/src/pages/Account.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useAuthContext } from \"../hooks/useAuthContext\";\r\n\r\n\r\nconst Account = () => {\r\n  const { user, dispatch } = useAuthContext();\r\n  const [classroomData, setClassroomData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [teacherCode, setTeacherCode] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  // Fetch classroom data for teacher or student\r\n  useEffect(() => {\r\n    if (user) {\r\n        \r\n      const fetchClassroom = async () => {\r\n        try {\r\n          let endpoint = \"\";\r\n          if (user.role === \"teacher\") {\r\n            endpoint = `/api/classes/by-email?email=${user.email}`;\r\n          } else if (user.role === \"student\" && user.code) {  // Use user.code instead of user.classroomCode\r\n            endpoint = `/api/classes/by-code/${user.code}`;\r\n\r\n          }\r\n  \r\n          if (endpoint) {\r\n            console.log(\"Fetching data from endpoint:\", endpoint);  // Add this log\r\n            const response = await fetch(endpoint, {\r\n              method: \"GET\",\r\n              headers: {\r\n                Authorization: `Bearer ${user.token}`,\r\n              },\r\n            });\r\n  \r\n            if (!response.ok) {\r\n              throw new Error(`Failed to fetch classroom: ${response.status} ${response.statusText}`);\r\n            }\r\n  \r\n            const contentType = response.headers.get(\"Content-Type\");\r\n            if (contentType && contentType.includes(\"application/json\")) {\r\n              const data = await response.json();\r\n              console.log(\"Fetched data:\", data);  // Add this log to check what data comes back\r\n              setClassroomData(data);\r\n            } else {\r\n              const errorText = await response.text();  // If not JSON, get the error page text\r\n              throw new Error(`Unexpected response format: ${errorText}`);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching classroom:\", error);\r\n          setError(error.message);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n  \r\n      fetchClassroom();\r\n    }\r\n  }, [user]);\r\n  \r\n\r\n  // Handle teacher code input submission for students\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setSuccess(\"\");\r\n    setLoading(true);\r\n\r\n    if (!user) {\r\n      setError(\"User is not logged in\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"/api/user\", {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          email: user.email, // Include the user's email for identification\r\n          newCode: teacherCode, // Use the entered teacher's code\r\n        }),\r\n      });\r\n\r\n      const json = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(json.error || \"Failed to join the class.\");\r\n      }\r\n\r\n      // Update user context and local storage\r\n      const updatedUser = { ...user, code: teacherCode };\r\n      dispatch({ type: \"UPDATE_USER\", payload: updatedUser });\r\n      localStorage.setItem(\"user\", JSON.stringify(updatedUser));\r\n\r\n      console.log(\"Classroom data after join:\", json);  // Add this log to see the classroom data\r\n      setClassroomData(json);\r\n      setSuccess(\"Successfully joined the class!\");\r\n    } catch (err) {\r\n      console.error(\"Error joining class:\", err);\r\n      setError(err.message || \"An error occurred. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!user) {\r\n    return <div>Please log in to view your account details.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"account\">\r\n      <h1>Account Info</h1>\r\n      <p>Account Type: {user.role}</p>\r\n      <p>Name: {user.name}</p>\r\n      <p>Email: {user.email}</p>\r\n      \r\n      {user.role === \"teacher\" && (\r\n        <>\r\n          {classroomData ? (\r\n            <>\r\n              <p>Class Name: {classroomData.classroomName}</p>\r\n              <p>Class Code: {classroomData.code}</p>\r\n            </>\r\n          ) : (\r\n            <p>No classroom associated with this email.</p>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {user.role === \"student\" && (\r\n        <>\r\n          {!classroomData && (\r\n            <form onSubmit={handleSubmit}>\r\n              <label>\r\n                Enter Teacher's Code:\r\n                <input\r\n                  type=\"text\"\r\n                  value={teacherCode}\r\n                  onChange={(e) => setTeacherCode(e.target.value)}\r\n                  required\r\n                />\r\n              </label>\r\n              <button type=\"submit\">Submit</button>\r\n            </form>\r\n          )}\r\n          {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n          {success && <p style={{ color: \"green\" }}>{success}</p>}\r\n          {classroomData ? (\r\n            <>\r\n              <p>Class Name: {classroomData.classroomName}</p>\r\n              <p>Class Code: {classroomData.code}</p>\r\n              <p>Teacher's Email: {classroomData.email}</p>\r\n            </>\r\n          ) : (\r\n            <p>No classroom associated yet.</p>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;"],"mappings":"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"},"metadata":{},"sourceType":"module"}