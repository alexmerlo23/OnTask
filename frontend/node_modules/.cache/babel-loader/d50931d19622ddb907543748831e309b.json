{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexm\\\\VsCodeProjects\\\\School Projects\\\\CEN\\\\SWE semester project\\\\SWE-OnTask\\\\frontend\\\\src\\\\components\\\\Calendar.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { DayPilotCalendar } from \"@daypilot/daypilot-lite-react\";\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calendar = _ref => {\n  _s();\n\n  let {\n    startDate,\n    events,\n    onDeleteEvent,\n    onEditEvent\n  } = _ref;\n  const {\n    user\n  } = useAuthContext();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [isCodeModalOpen, setIsCodeModalOpen] = useState(false); // Modal to enter parent code\n\n  const [enteredCode, setEnteredCode] = useState(''); // State to hold the entered code\n\n  const [checkmarkColor, setCheckmarkColor] = useState('white'); // Color of the checkmark\n\n  const openModal = event => {\n    setSelectedEvent(event);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => setIsModalOpen(false); // Close the event details modal\n\n\n  const openCodeModal = () => {\n    setIsCodeModalOpen(true); // Open parent code entry modal\n  };\n\n  const closeCodeModal = () => {\n    setIsCodeModalOpen(false);\n    setEnteredCode(''); // Reset the entered code when closing the modal\n  };\n\n  const verifyParentCode = () => {\n    if (enteredCode === user.parentCode) {\n      // Assuming parentCode is available in the user object\n      setCheckmarkColor('green');\n      closeCodeModal();\n    } else {\n      alert('Incorrect parent code.');\n    }\n  };\n\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n\n  const openEditModal = event => {\n    setSelectedEvent(event);\n    setIsEditModalOpen(true);\n  };\n\n  const closeEditModal = () => setIsEditModalOpen(false); // Close the edit modal\n\n\n  const [text, setText] = useState('');\n  const [date, setDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [color, setColor] = useState('');\n  const [type, setType] = useState('');\n  const [classroom, setClassroom] = useState('');\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const typeOptions = ['Homework', 'Test', 'Document', 'Other'];\n  const colorOptions = ['Black', 'Grey', 'Red', 'OrangeRed', 'MediumVioletRed', 'Purple', 'BlueViolet', 'RoyalBlue', 'DarkBlue', 'ForestGreen'];\n\n  function separateDateTime(dateTime) {\n    const parts = dateTime.split('T');\n    const date = parts[0]; // The date part\n\n    const time = parts[1]; // The time part\n\n    return {\n      date,\n      time\n    };\n  }\n\n  const formattedEvents = events.map(event => ({\n    id: event.id,\n    text: event.text,\n    start: new Date(event.start).toISOString(),\n    end: new Date(event.end).toISOString(),\n    backColor: event.backColor,\n    participants: event.participants || 0,\n    type: event.type,\n    classroom: event.classroom\n  }));\n  const config = {\n    viewType: \"Week\",\n    durationBarVisible: false,\n    startDate: startDate,\n    events: formattedEvents,\n    onBeforeEventRender: args => {\n      args.data.backColor = args.data.backColor || \"#ffffff\"; // Fallback to white if no color\n\n      let checkmarkHtml = ''; // Add a white checkmark for students\n\n      if (user && user.role === 'student') {\n        checkmarkHtml = `\n          <div style=\"text-align: center; margin-top: 10px;\">\n            <span \n              class=\"checkmark\" \n              style=\"font-size: 20px; cursor: pointer; color: ${checkmarkColor};\"\n              onClick=\"openCodeModal()\">\n              ‚úîÔ∏è\n            </span>\n          </div>`;\n      }\n\n      if (user && user.role !== 'student') {\n        args.data.html = `\n          <div style=\"display: flex; flex-direction: column; justify-content: space-between; height: 100%;\">\n            <div>${args.data.text}</div>\n            <div style=\"display: flex; justify-content: center; gap: 10px; margin-top: 5px;\">\n              ${onEditEvent ? '<span class=\"edit-icon\" style=\"cursor: pointer;\">‚úèÔ∏è</span>' : ''}\n              ${onDeleteEvent ? '<span class=\"delete-icon\" style=\"cursor: pointer;\">üóëÔ∏è</span>' : ''}\n            </div>\n          </div>`;\n      } else {\n        args.data.html = `\n          <div style=\"display: flex; flex-direction: column; justify-content: space-between; height: 100%;\">\n            <div>${args.data.text}</div>\n            ${checkmarkHtml} <!-- White checkmark for students -->\n          </div>`;\n      }\n    },\n    onEventClick: args => {\n      if (onDeleteEvent || onEditEvent) {\n        const eventId = args.e.id();\n        const target = args.originalEvent.target;\n\n        if (onDeleteEvent && target.classList.contains(\"delete-icon\")) {\n          onDeleteEvent(eventId);\n        } else if (onEditEvent && target.classList.contains(\"edit-icon\")) {\n          const event = formattedEvents.find(event => event.id === eventId);\n          const {\n            date: eventStartDate,\n            time: eventStartTime\n          } = separateDateTime(event.start.toString());\n          const {\n            date: eventEndDate,\n            time: eventEndTime\n          } = separateDateTime(event.end.toString());\n          setText(event.text);\n          setType(event.type);\n          setColor(event.backColor);\n          setDate(eventStartDate);\n          setStartTime(eventStartTime);\n          setEndTime(eventEndTime);\n          setClassroom(event.classroom);\n          openEditModal(event);\n        } else {\n          const event = formattedEvents.find(event => event.id === eventId);\n          openModal(event); // Open modal with event details\n        }\n      }\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!user) {\n      setError('You must be logged in');\n      return;\n    }\n\n    if (!date || !startTime || !endTime || !type) {\n      setError('Please fill in all fields');\n      return;\n    }\n\n    const start = new Date(`${date}T${startTime}Z`);\n    const end = new Date(`${date}T${endTime}Z`);\n\n    if (isNaN(start.getTime()) || isNaN(end.getTime())) {\n      setError('Invalid date or time provided');\n      return;\n    }\n\n    const event = {\n      text,\n      color,\n      type,\n      start: start.toISOString(),\n      end: end.toISOString(),\n      classroom\n    };\n    onEditEvent(selectedEvent.id, event);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DayPilotCalendar, { ...config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), isModalOpen && selectedEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Event Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Event Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedEvent.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Event Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedEvent.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Event Color:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedEvent.backColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Date/Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start: \", new Date(selectedEvent.start).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"End: \", new Date(selectedEvent.end).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: closeModal,\n          className: \"close-modal\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), isEditModalOpen && selectedEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"edit-event\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: closeEditModal,\n            className: \"submit\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this), isCodeModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Enter Parent Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredCode,\n          onChange: e => setEnteredCode(e.target.value),\n          placeholder: \"Enter parent code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: verifyParentCode,\n          children: \"Verify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeCodeModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calendar, \"Pm/FaLa7FsbX+X7IuETonQLqN7M=\", false, function () {\n  return [useAuthContext];\n});\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","DayPilotCalendar","useAuthContext","Calendar","startDate","events","onDeleteEvent","onEditEvent","user","isModalOpen","setIsModalOpen","selectedEvent","setSelectedEvent","isCodeModalOpen","setIsCodeModalOpen","enteredCode","setEnteredCode","checkmarkColor","setCheckmarkColor","openModal","event","closeModal","openCodeModal","closeCodeModal","verifyParentCode","parentCode","alert","isEditModalOpen","setIsEditModalOpen","openEditModal","closeEditModal","text","setText","date","setDate","startTime","setStartTime","endTime","setEndTime","color","setColor","type","setType","classroom","setClassroom","error","setError","emptyFields","setEmptyFields","typeOptions","colorOptions","separateDateTime","dateTime","parts","split","time","formattedEvents","map","id","start","Date","toISOString","end","backColor","participants","config","viewType","durationBarVisible","onBeforeEventRender","args","data","checkmarkHtml","role","html","onEventClick","eventId","e","target","originalEvent","classList","contains","find","eventStartDate","eventStartTime","toString","eventEndDate","eventEndTime","handleSubmit","preventDefault","isNaN","getTime","toLocaleString","value"],"sources":["C:/Users/alexm/VsCodeProjects/School Projects/CEN/SWE semester project/SWE-OnTask/frontend/src/components/Calendar.js"],"sourcesContent":["import { React, useState } from 'react';\r\nimport { DayPilotCalendar } from \"@daypilot/daypilot-lite-react\";\r\nimport { useAuthContext } from '../hooks/useAuthContext';\r\n\r\nconst Calendar = ({ startDate, events, onDeleteEvent, onEditEvent }) => {\r\n  const { user } = useAuthContext();\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [isCodeModalOpen, setIsCodeModalOpen] = useState(false); // Modal to enter parent code\r\n  const [enteredCode, setEnteredCode] = useState(''); // State to hold the entered code\r\n  const [checkmarkColor, setCheckmarkColor] = useState('white'); // Color of the checkmark\r\n\r\n  const openModal = (event) => {\r\n    setSelectedEvent(event);\r\n    setIsModalOpen(true);\r\n  };\r\n  const closeModal = () => setIsModalOpen(false); // Close the event details modal\r\n\r\n  const openCodeModal = () => {\r\n    setIsCodeModalOpen(true); // Open parent code entry modal\r\n  };\r\n  const closeCodeModal = () => {\r\n    setIsCodeModalOpen(false);\r\n    setEnteredCode(''); // Reset the entered code when closing the modal\r\n  };\r\n\r\n  const verifyParentCode = () => {\r\n    if (enteredCode === user.parentCode) { // Assuming parentCode is available in the user object\r\n      setCheckmarkColor('green');\r\n      closeCodeModal();\r\n    } else {\r\n      alert('Incorrect parent code.');\r\n    }\r\n  };\r\n\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const openEditModal = (event) => {\r\n    setSelectedEvent(event);\r\n    setIsEditModalOpen(true);\r\n  };\r\n  const closeEditModal = () => setIsEditModalOpen(false); // Close the edit modal\r\n\r\n  const [text, setText] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [startTime, setStartTime] = useState('');\r\n  const [endTime, setEndTime] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [classroom, setClassroom] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [emptyFields, setEmptyFields] = useState([]);\r\n  const typeOptions = ['Homework', 'Test', 'Document', 'Other'];\r\n\r\n  const colorOptions = [\r\n    'Black', 'Grey', 'Red', 'OrangeRed', 'MediumVioletRed',\r\n    'Purple', 'BlueViolet', 'RoyalBlue', 'DarkBlue', 'ForestGreen'\r\n  ];\r\n\r\n  function separateDateTime(dateTime) {\r\n    const parts = dateTime.split('T');\r\n    const date = parts[0]; // The date part\r\n    const time = parts[1]; // The time part\r\n    return { date, time };\r\n  }\r\n\r\n  const formattedEvents = events.map(event => ({\r\n    id: event.id,\r\n    text: event.text,\r\n    start: new Date(event.start).toISOString(),\r\n    end: new Date(event.end).toISOString(),\r\n    backColor: event.backColor,\r\n    participants: event.participants || 0,\r\n    type: event.type,\r\n    classroom: event.classroom\r\n  }));\r\n\r\n  const config = {\r\n    viewType: \"Week\",\r\n    durationBarVisible: false,\r\n    startDate: startDate,\r\n    events: formattedEvents,\r\n\r\n    onBeforeEventRender: args => {\r\n      args.data.backColor = args.data.backColor || \"#ffffff\"; // Fallback to white if no color\r\n      let checkmarkHtml = '';\r\n      // Add a white checkmark for students\r\n      if (user && user.role === 'student') {\r\n        checkmarkHtml = `\r\n          <div style=\"text-align: center; margin-top: 10px;\">\r\n            <span \r\n              class=\"checkmark\" \r\n              style=\"font-size: 20px; cursor: pointer; color: ${checkmarkColor};\"\r\n              onClick=\"openCodeModal()\">\r\n              ‚úîÔ∏è\r\n            </span>\r\n          </div>`;\r\n      }\r\n\r\n      if (user && user.role !== 'student') {\r\n        args.data.html = `\r\n          <div style=\"display: flex; flex-direction: column; justify-content: space-between; height: 100%;\">\r\n            <div>${args.data.text}</div>\r\n            <div style=\"display: flex; justify-content: center; gap: 10px; margin-top: 5px;\">\r\n              ${onEditEvent ? '<span class=\"edit-icon\" style=\"cursor: pointer;\">‚úèÔ∏è</span>' : ''}\r\n              ${onDeleteEvent ? '<span class=\"delete-icon\" style=\"cursor: pointer;\">üóëÔ∏è</span>' : ''}\r\n            </div>\r\n          </div>`;\r\n      } else {\r\n        args.data.html = `\r\n          <div style=\"display: flex; flex-direction: column; justify-content: space-between; height: 100%;\">\r\n            <div>${args.data.text}</div>\r\n            ${checkmarkHtml} <!-- White checkmark for students -->\r\n          </div>`;\r\n      }\r\n    },\r\n\r\n    onEventClick: args => {\r\n      if (onDeleteEvent || onEditEvent) {\r\n        const eventId = args.e.id();\r\n        const target = args.originalEvent.target;\r\n\r\n        if (onDeleteEvent && target.classList.contains(\"delete-icon\")) {\r\n          onDeleteEvent(eventId);\r\n        } else if (onEditEvent && target.classList.contains(\"edit-icon\")) {\r\n          const event = formattedEvents.find(event => event.id === eventId);\r\n\r\n          const { date: eventStartDate, time: eventStartTime } = separateDateTime(event.start.toString());\r\n          const { date: eventEndDate, time: eventEndTime } = separateDateTime(event.end.toString());\r\n          setText(event.text);\r\n          setType(event.type);\r\n          setColor(event.backColor);\r\n          setDate(eventStartDate);\r\n          setStartTime(eventStartTime);\r\n          setEndTime(eventEndTime);\r\n          setClassroom(event.classroom);\r\n\r\n          openEditModal(event);\r\n        } else {\r\n          const event = formattedEvents.find(event => event.id === eventId);\r\n          openModal(event); // Open modal with event details\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!user) {\r\n      setError('You must be logged in');\r\n      return;\r\n    }\r\n\r\n    if (!date || !startTime || !endTime || !type) {\r\n      setError('Please fill in all fields');\r\n      return;\r\n    }\r\n\r\n    const start = new Date(`${date}T${startTime}Z`);\r\n    const end = new Date(`${date}T${endTime}Z`);\r\n\r\n    if (isNaN(start.getTime()) || isNaN(end.getTime())) {\r\n      setError('Invalid date or time provided');\r\n      return;\r\n    }\r\n\r\n    const event = { \r\n      text,\r\n      color,\r\n      type,\r\n      start: start.toISOString(),\r\n      end: end.toISOString(),\r\n      classroom\r\n    };\r\n\r\n    onEditEvent(selectedEvent.id, event);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DayPilotCalendar {...config} />\r\n\r\n      {isModalOpen && selectedEvent && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <h1>Event Info</h1>\r\n            <h3>Event Title:</h3>\r\n            <p>{selectedEvent.text}</p>\r\n            <h3>Event Type:</h3>\r\n            <p>{selectedEvent.type}</p>\r\n            <h3>Event Color:</h3>\r\n            <p>{selectedEvent.backColor}</p>\r\n            <h3>Date/Time:</h3>\r\n            <p>Start: {new Date(selectedEvent.start).toLocaleString()}</p>\r\n            <p>End: {new Date(selectedEvent.end).toLocaleString()}</p>\r\n            <button type=\"button\" onClick={closeModal} className=\"close-modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isEditModalOpen && selectedEvent && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <form className=\"edit-event\" onSubmit={handleSubmit}>\r\n              <h3>Edit Event</h3>\r\n              {/* Other form fields */}\r\n              <button type=\"submit\" className=\"submit\">Save Changes</button>\r\n              {error && <div className=\"error\">{error}</div>}\r\n              <button type=\"button\" onClick={closeEditModal} className=\"submit\">Close</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Parent code modal */}\r\n      {isCodeModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <h3>Enter Parent Code</h3>\r\n            <input\r\n              type=\"text\"\r\n              value={enteredCode}\r\n              onChange={(e) => setEnteredCode(e.target.value)}\r\n              placeholder=\"Enter parent code\"\r\n            />\r\n            <button onClick={verifyParentCode}>Verify</button>\r\n            <button onClick={closeCodeModal}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}