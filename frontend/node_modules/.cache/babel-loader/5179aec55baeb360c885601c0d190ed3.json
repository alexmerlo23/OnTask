{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext'; //import { useClassContext } from './useClassContext'\n\nexport const useSignup = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext(); //const { dispatch: classDispatch } = useClassContext();\n\n  const signup = async (email, password, role, code) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        role,\n        code\n      })\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json)); // update the auth context\n\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      }); // update loading state\n\n      setIsLoading(false);\n    }\n  };\n  /*const signupClass = async (email, classroomName, code) => {\r\n    console.log(\"testing\")\r\n    setIsLoading(true);\r\n    setError(null);\r\n      const classroom = {\r\n      email,\r\n      classroomName,\r\n      code\r\n    }\r\n      const response = await fetch('/api/classes', {\r\n      method: 'POST',\r\n      body: JSON.stringify(classroom),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const json = await response.json();\r\n    console.log(json)\r\n      if (!response.ok) {\r\n      setIsLoading(false);\r\n      setError(json.error);\r\n    }\r\n    if (response.ok) {\r\n      // save the user to local storage\r\n      localStorage.setItem('class', JSON.stringify(json));\r\n        classDispatch({ type: 'CREATE_CLASS', payload: json });\r\n        // update loading state\r\n      setIsLoading(false);\r\n    }\r\n  };*/\n\n\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n\n_s(useSignup, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","error","setError","isLoading","setIsLoading","dispatch","signup","email","password","role","code","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["C:/Users/alexm/VsCodeProjects/School Projects/CEN/SWE semester project/SWE-OnTask/frontend/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuthContext } from './useAuthContext';\r\n//import { useClassContext } from './useClassContext'\r\n\r\nexport const useSignup = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(null);\r\n  const { dispatch } = useAuthContext();\r\n  //const { dispatch: classDispatch } = useClassContext();\r\n\r\n  const signup = async (email, password, role, code) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    const response = await fetch('/api/user/signup', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, password, role, code })\r\n    });\r\n    const json = await response.json();\r\n\r\n    if (!response.ok) {\r\n      setIsLoading(false);\r\n      setError(json.error);\r\n    }\r\n    if (response.ok) {\r\n      // save the user to local storage\r\n      localStorage.setItem('user', JSON.stringify(json));\r\n\r\n      // update the auth context\r\n      dispatch({ type: 'LOGIN', payload: json });\r\n\r\n      // update loading state\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  /*const signupClass = async (email, classroomName, code) => {\r\n    console.log(\"testing\")\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    const classroom = {\r\n      email,\r\n      classroomName,\r\n      code\r\n    }\r\n\r\n    const response = await fetch('/api/classes', {\r\n      method: 'POST',\r\n      body: JSON.stringify(classroom),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    const json = await response.json();\r\n    console.log(json)\r\n\r\n    if (!response.ok) {\r\n      setIsLoading(false);\r\n      setError(json.error);\r\n    }\r\n    if (response.ok) {\r\n      // save the user to local storage\r\n      localStorage.setItem('class', JSON.stringify(json));\r\n\r\n      classDispatch({ type: 'CREATE_CLASS', payload: json });\r\n\r\n      // update loading state\r\n      setIsLoading(false);\r\n    }\r\n  };*/\r\n\r\n  return { signup, isLoading, error };\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B,C,CACA;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAC7B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM;IAAEO;EAAF,IAAeN,cAAc,EAAnC,CAH6B,CAI7B;;EAEA,MAAMO,MAAM,GAAG,OAAOC,KAAP,EAAcC,QAAd,EAAwBC,IAAxB,EAA8BC,IAA9B,KAAuC;IACpDN,YAAY,CAAC,IAAD,CAAZ;IACAF,QAAQ,CAAC,IAAD,CAAR;IAEA,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAD,EAAqB;MAC/CC,MAAM,EAAE,MADuC;MAE/CC,OAAO,EAAE;QAAE,gBAAgB;MAAlB,CAFsC;MAG/CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAEV,KAAF;QAASC,QAAT;QAAmBC,IAAnB;QAAyBC;MAAzB,CAAf;IAHyC,CAArB,CAA5B;IAKA,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAnB;;IAEA,IAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;MAChBf,YAAY,CAAC,KAAD,CAAZ;MACAF,QAAQ,CAACgB,IAAI,CAACjB,KAAN,CAAR;IACD;;IACD,IAAIU,QAAQ,CAACQ,EAAb,EAAiB;MACf;MACAC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACC,SAAL,CAAeC,IAAf,CAA7B,EAFe,CAIf;;MACAb,QAAQ,CAAC;QAAEiB,IAAI,EAAE,OAAR;QAAiBC,OAAO,EAAEL;MAA1B,CAAD,CAAR,CALe,CAOf;;MACAd,YAAY,CAAC,KAAD,CAAZ;IACD;EACF,CAzBD;EA2BA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAOE,OAAO;IAAEE,MAAF;IAAUH,SAAV;IAAqBF;EAArB,CAAP;AACD,CApEM;;GAAMD,S;UAGUD,c"},"metadata":{},"sourceType":"module"}