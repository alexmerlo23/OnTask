{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexm\\\\VsCodeProjects\\\\School Projects\\\\CEN\\\\SWE semester project\\\\SWE-OnTask\\\\frontend\\\\src\\\\pages\\\\Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { useClassContext } from '../hooks/useClassContext'; // Import the context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Account = () => {\n  _s();\n\n  const {\n    user,\n    dispatch\n  } = useAuthContext();\n  const {\n    setClassroom\n  } = useClassContext(); // Assuming you have setClassroom to update the context\n\n  useEffect(() => {\n    if (user) {\n      const fetchClassroom = async () => {\n        try {\n          let endpoint = \"\";\n\n          if (user.role === \"teacher\") {\n            endpoint = `/api/classes/by-email?email=${user.email}`;\n          } else if (user.role === \"student\" && user.code) {\n            endpoint = `/api/classes/by-code/${user.code}`;\n          }\n\n          if (endpoint) {\n            const response = await fetch(endpoint, {\n              method: \"GET\",\n              headers: {\n                Authorization: `Bearer ${user.token}`\n              }\n            });\n\n            if (!response.ok) {\n              throw new Error(`Failed to fetch classroom: ${response.status} ${response.statusText}`);\n            }\n\n            const data = await response.json();\n            setClassroom(data); // Store fetched classroom in context\n          }\n        } catch (error) {\n          console.error(\"Error fetching classroom:\", error);\n        }\n      };\n\n      fetchClassroom();\n    }\n  }, [user, setClassroom]); // Handle teacher code input submission for students\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    setSuccess(\"\");\n    setLoading(true);\n\n    if (!user) {\n      setError(\"User is not logged in\");\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await fetch(\"/api/user\", {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        },\n        body: JSON.stringify({\n          email: user.email,\n          // Include the user's email for identification\n          newCode: teacherCode // Use the entered teacher's code\n\n        })\n      });\n      const json = await response.json();\n\n      if (!response.ok) {\n        throw new Error(json.error || \"Failed to join the class.\");\n      } // Update user context and local storage\n\n\n      const updatedUser = { ...user,\n        code: teacherCode\n      };\n      dispatch({\n        type: \"UPDATE_USER\",\n        payload: updatedUser\n      });\n      localStorage.setItem(\"user\", JSON.stringify(updatedUser));\n      console.log(\"Classroom data after join:\", json); // Add this log to see the classroom data\n\n      setClassroomData(json);\n      setSuccess(\"Successfully joined the class!\");\n    } catch (err) {\n      console.error(\"Error joining class:\", err);\n      setError(err.message || \"An error occurred. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please log in to view your account details.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Account Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Account Type: \", user.role]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), user.role === \"teacher\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: classroomData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Class Name: \", classroomData.classroomName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Class Code: \", classroomData.code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No classroom associated with this email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), user.role === \"student\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!classroomData && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Enter Teacher's Code:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: teacherCode,\n            onChange: e => setTeacherCode(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"green\"\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }, this), classroomData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Class Name: \", classroomData.classroomName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Class Code: \", classroomData.code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Teacher's Email: \", classroomData.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No classroom associated yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Account, \"1TkebIDralYl+H14SKxNVgZpOok=\", false, function () {\n  return [useAuthContext, useClassContext];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useEffect","useState","useAuthContext","useClassContext","Account","user","dispatch","setClassroom","fetchClassroom","endpoint","role","email","code","response","fetch","method","headers","Authorization","token","ok","Error","status","statusText","data","json","error","console","handleSubmit","e","preventDefault","setError","setSuccess","setLoading","body","JSON","stringify","newCode","teacherCode","updatedUser","type","payload","localStorage","setItem","log","setClassroomData","err","message","loading","name","classroomData","classroomName","setTeacherCode","target","value","color","success"],"sources":["C:/Users/alexm/VsCodeProjects/School Projects/CEN/SWE semester project/SWE-OnTask/frontend/src/pages/Account.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useAuthContext } from \"../hooks/useAuthContext\";\r\nimport { useClassContext } from '../hooks/useClassContext';  // Import the context\r\n\r\nconst Account = () => {\r\n    const { user, dispatch } = useAuthContext();\r\n    const { setClassroom } = useClassContext();  // Assuming you have setClassroom to update the context\r\n    \r\n    useEffect(() => {\r\n      if (user) {\r\n        const fetchClassroom = async () => {\r\n          try {\r\n            let endpoint = \"\";\r\n            if (user.role === \"teacher\") {\r\n              endpoint = `/api/classes/by-email?email=${user.email}`;\r\n            } else if (user.role === \"student\" && user.code) {\r\n              endpoint = `/api/classes/by-code/${user.code}`;\r\n            }\r\n  \r\n            if (endpoint) {\r\n              const response = await fetch(endpoint, {\r\n                method: \"GET\",\r\n                headers: {\r\n                  Authorization: `Bearer ${user.token}`,\r\n                },\r\n              });\r\n  \r\n              if (!response.ok) {\r\n                throw new Error(`Failed to fetch classroom: ${response.status} ${response.statusText}`);\r\n              }\r\n  \r\n              const data = await response.json();\r\n              setClassroom(data);  // Store fetched classroom in context\r\n            }\r\n          } catch (error) {\r\n            console.error(\"Error fetching classroom:\", error);\r\n          }\r\n        };\r\n  \r\n        fetchClassroom();\r\n      }\r\n    }, [user, setClassroom]);\r\n    \r\n\r\n\r\n  // Handle teacher code input submission for students\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setSuccess(\"\");\r\n    setLoading(true);\r\n\r\n    if (!user) {\r\n      setError(\"User is not logged in\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"/api/user\", {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          email: user.email, // Include the user's email for identification\r\n          newCode: teacherCode, // Use the entered teacher's code\r\n        }),\r\n      });\r\n\r\n      const json = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(json.error || \"Failed to join the class.\");\r\n      }\r\n\r\n      // Update user context and local storage\r\n      const updatedUser = { ...user, code: teacherCode };\r\n      dispatch({ type: \"UPDATE_USER\", payload: updatedUser });\r\n      localStorage.setItem(\"user\", JSON.stringify(updatedUser));\r\n\r\n      console.log(\"Classroom data after join:\", json);  // Add this log to see the classroom data\r\n      setClassroomData(json);\r\n      setSuccess(\"Successfully joined the class!\");\r\n    } catch (err) {\r\n      console.error(\"Error joining class:\", err);\r\n      setError(err.message || \"An error occurred. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!user) {\r\n    return <div>Please log in to view your account details.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"account\">\r\n      <h1>Account Info</h1>\r\n      <p>Account Type: {user.role}</p>\r\n      <p>Name: {user.name}</p>\r\n      <p>Email: {user.email}</p>\r\n      \r\n      {user.role === \"teacher\" && (\r\n        <>\r\n          {classroomData ? (\r\n            <>\r\n              <p>Class Name: {classroomData.classroomName}</p>\r\n              <p>Class Code: {classroomData.code}</p>\r\n            </>\r\n          ) : (\r\n            <p>No classroom associated with this email.</p>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {user.role === \"student\" && (\r\n        <>\r\n          {!classroomData && (\r\n            <form onSubmit={handleSubmit}>\r\n              <label>\r\n                Enter Teacher's Code:\r\n                <input\r\n                  type=\"text\"\r\n                  value={teacherCode}\r\n                  onChange={(e) => setTeacherCode(e.target.value)}\r\n                  required\r\n                />\r\n              </label>\r\n              <button type=\"submit\">Submit</button>\r\n            </form>\r\n          )}\r\n          {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n          {success && <p style={{ color: \"green\" }}>{success}</p>}\r\n          {classroomData ? (\r\n            <>\r\n              <p>Class Name: {classroomData.classroomName}</p>\r\n              <p>Class Code: {classroomData.code}</p>\r\n              <p>Teacher's Email: {classroomData.email}</p>\r\n            </>\r\n          ) : (\r\n            <p>No classroom associated yet.</p>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;"],"mappings":"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"},"metadata":{},"sourceType":"module"}